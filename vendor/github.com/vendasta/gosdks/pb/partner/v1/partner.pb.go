// Code generated by protoc-gen-go.
// source: partner.proto
// DO NOT EDIT!

/*
Package partner_v1 is a generated protocol buffer package.

It is generated from these files:
	partner.proto

It has these top-level messages:
	Partner
	GetPartnerRequest
	GetPartnerResponse
*/
package partner_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Partner_PartnerType int32

const (
	Partner_Platform Partner_PartnerType = 0
	Partner_Product  Partner_PartnerType = 1
)

var Partner_PartnerType_name = map[int32]string{
	0: "Platform",
	1: "Product",
}
var Partner_PartnerType_value = map[string]int32{
	"Platform": 0,
	"Product":  1,
}

func (x Partner_PartnerType) String() string {
	return proto.EnumName(Partner_PartnerType_name, int32(x))
}
func (Partner_PartnerType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Partner_ServiceLevel int32

const (
	Partner_Premium  Partner_ServiceLevel = 0
	Partner_Standard Partner_ServiceLevel = 1
)

var Partner_ServiceLevel_name = map[int32]string{
	0: "Premium",
	1: "Standard",
}
var Partner_ServiceLevel_value = map[string]int32{
	"Premium":  0,
	"Standard": 1,
}

func (x Partner_ServiceLevel) String() string {
	return proto.EnumName(Partner_ServiceLevel_name, int32(x))
}
func (Partner_ServiceLevel) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

type Partner_SubscriptionLevel int32

const (
	Partner_Lite  Partner_SubscriptionLevel = 0
	Partner_Basic Partner_SubscriptionLevel = 1
)

var Partner_SubscriptionLevel_name = map[int32]string{
	0: "Lite",
	1: "Basic",
}
var Partner_SubscriptionLevel_value = map[string]int32{
	"Lite":  0,
	"Basic": 1,
}

func (x Partner_SubscriptionLevel) String() string {
	return proto.EnumName(Partner_SubscriptionLevel_name, int32(x))
}
func (Partner_SubscriptionLevel) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 2} }

type Partner struct {
	PartnerId         string                     `protobuf:"bytes,1,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	Name              string                     `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	AccountExecutive  string                     `protobuf:"bytes,3,opt,name=account_executive,json=accountExecutive" json:"account_executive,omitempty"`
	PartnerType       Partner_PartnerType        `protobuf:"varint,4,opt,name=partner_type,json=partnerType,enum=partner.v1.Partner_PartnerType" json:"partner_type,omitempty"`
	ServiceLevel      Partner_ServiceLevel       `protobuf:"varint,5,opt,name=service_level,json=serviceLevel,enum=partner.v1.Partner_ServiceLevel" json:"service_level,omitempty"`
	SubscriptionLevel Partner_SubscriptionLevel  `protobuf:"varint,6,opt,name=subscription_level,json=subscriptionLevel,enum=partner.v1.Partner_SubscriptionLevel" json:"subscription_level,omitempty"`
	Paused            bool                       `protobuf:"varint,7,opt,name=paused" json:"paused,omitempty"`
	Cancelled         bool                       `protobuf:"varint,8,opt,name=cancelled" json:"cancelled,omitempty"`
	Created           *google_protobuf.Timestamp `protobuf:"bytes,9,opt,name=created" json:"created,omitempty"`
	Modified          *google_protobuf.Timestamp `protobuf:"bytes,10,opt,name=modified" json:"modified,omitempty"`
}

func (m *Partner) Reset()                    { *m = Partner{} }
func (m *Partner) String() string            { return proto.CompactTextString(m) }
func (*Partner) ProtoMessage()               {}
func (*Partner) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Partner) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

func (m *Partner) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Partner) GetAccountExecutive() string {
	if m != nil {
		return m.AccountExecutive
	}
	return ""
}

func (m *Partner) GetPartnerType() Partner_PartnerType {
	if m != nil {
		return m.PartnerType
	}
	return Partner_Platform
}

func (m *Partner) GetServiceLevel() Partner_ServiceLevel {
	if m != nil {
		return m.ServiceLevel
	}
	return Partner_Premium
}

func (m *Partner) GetSubscriptionLevel() Partner_SubscriptionLevel {
	if m != nil {
		return m.SubscriptionLevel
	}
	return Partner_Lite
}

func (m *Partner) GetPaused() bool {
	if m != nil {
		return m.Paused
	}
	return false
}

func (m *Partner) GetCancelled() bool {
	if m != nil {
		return m.Cancelled
	}
	return false
}

func (m *Partner) GetCreated() *google_protobuf.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Partner) GetModified() *google_protobuf.Timestamp {
	if m != nil {
		return m.Modified
	}
	return nil
}

type GetPartnerRequest struct {
	PartnerId string `protobuf:"bytes,1,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
}

func (m *GetPartnerRequest) Reset()                    { *m = GetPartnerRequest{} }
func (m *GetPartnerRequest) String() string            { return proto.CompactTextString(m) }
func (*GetPartnerRequest) ProtoMessage()               {}
func (*GetPartnerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetPartnerRequest) GetPartnerId() string {
	if m != nil {
		return m.PartnerId
	}
	return ""
}

type GetPartnerResponse struct {
	Partner *Partner `protobuf:"bytes,1,opt,name=partner" json:"partner,omitempty"`
}

func (m *GetPartnerResponse) Reset()                    { *m = GetPartnerResponse{} }
func (m *GetPartnerResponse) String() string            { return proto.CompactTextString(m) }
func (*GetPartnerResponse) ProtoMessage()               {}
func (*GetPartnerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetPartnerResponse) GetPartner() *Partner {
	if m != nil {
		return m.Partner
	}
	return nil
}

func init() {
	proto.RegisterType((*Partner)(nil), "partner.v1.Partner")
	proto.RegisterType((*GetPartnerRequest)(nil), "partner.v1.GetPartnerRequest")
	proto.RegisterType((*GetPartnerResponse)(nil), "partner.v1.GetPartnerResponse")
	proto.RegisterEnum("partner.v1.Partner_PartnerType", Partner_PartnerType_name, Partner_PartnerType_value)
	proto.RegisterEnum("partner.v1.Partner_ServiceLevel", Partner_ServiceLevel_name, Partner_ServiceLevel_value)
	proto.RegisterEnum("partner.v1.Partner_SubscriptionLevel", Partner_SubscriptionLevel_name, Partner_SubscriptionLevel_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Partners service

type PartnersClient interface {
	GetPartner(ctx context.Context, in *GetPartnerRequest, opts ...grpc.CallOption) (*GetPartnerResponse, error)
}

type partnersClient struct {
	cc *grpc.ClientConn
}

func NewPartnersClient(cc *grpc.ClientConn) PartnersClient {
	return &partnersClient{cc}
}

func (c *partnersClient) GetPartner(ctx context.Context, in *GetPartnerRequest, opts ...grpc.CallOption) (*GetPartnerResponse, error) {
	out := new(GetPartnerResponse)
	err := grpc.Invoke(ctx, "/partner.v1.Partners/GetPartner", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Partners service

type PartnersServer interface {
	GetPartner(context.Context, *GetPartnerRequest) (*GetPartnerResponse, error)
}

func RegisterPartnersServer(s *grpc.Server, srv PartnersServer) {
	s.RegisterService(&_Partners_serviceDesc, srv)
}

func _Partners_GetPartner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPartnerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnersServer).GetPartner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/partner.v1.Partners/GetPartner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnersServer).GetPartner(ctx, req.(*GetPartnerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Partners_serviceDesc = grpc.ServiceDesc{
	ServiceName: "partner.v1.Partners",
	HandlerType: (*PartnersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPartner",
			Handler:    _Partners_GetPartner_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "partner.proto",
}

func init() { proto.RegisterFile("partner.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 453 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x92, 0xdf, 0x6a, 0xdb, 0x4c,
	0x10, 0xc5, 0xa3, 0xef, 0x73, 0x2c, 0x69, 0xa4, 0x14, 0x79, 0x0a, 0x45, 0x98, 0xa6, 0x11, 0x82,
	0x82, 0x4a, 0xa9, 0x42, 0xd5, 0xd2, 0x07, 0x48, 0x09, 0xa5, 0x34, 0x17, 0x46, 0x31, 0xf4, 0xd2,
	0xac, 0x77, 0xc7, 0x61, 0x41, 0xd2, 0xaa, 0xda, 0x95, 0x69, 0x1e, 0xba, 0xef, 0x50, 0xa2, 0x3f,
	0xb5, 0x68, 0x5c, 0x72, 0x25, 0xcd, 0x9c, 0xdf, 0x1c, 0x0e, 0x33, 0x0b, 0x67, 0x35, 0x6b, 0x4c,
	0x45, 0x4d, 0x5a, 0x37, 0xca, 0x28, 0x84, 0xb1, 0xdc, 0xbf, 0x5f, 0x5e, 0xdc, 0x29, 0x75, 0x57,
	0xd0, 0x65, 0xa7, 0x6c, 0xdb, 0xdd, 0xa5, 0x91, 0x25, 0x69, 0xc3, 0xca, 0xba, 0x87, 0xe3, 0x5f,
	0x33, 0xb0, 0x57, 0x3d, 0x8f, 0xe7, 0x30, 0x8e, 0x6e, 0xa4, 0x08, 0xad, 0xc8, 0x4a, 0xdc, 0xdc,
	0x1d, 0x3a, 0x5f, 0x05, 0x22, 0xcc, 0x2a, 0x56, 0x52, 0xf8, 0x5f, 0x27, 0x74, 0xff, 0xf8, 0x16,
	0x16, 0x8c, 0x73, 0xd5, 0x56, 0x66, 0x43, 0x3f, 0x89, 0xb7, 0x46, 0xee, 0x29, 0xfc, 0xbf, 0x03,
	0x82, 0x41, 0xb8, 0x1e, 0xfb, 0x78, 0x05, 0xfe, 0xe8, 0x6f, 0xee, 0x6b, 0x0a, 0x67, 0x91, 0x95,
	0x3c, 0xcb, 0x2e, 0xd2, 0x43, 0xde, 0x74, 0x88, 0x32, 0x7e, 0xd7, 0xf7, 0x35, 0xe5, 0x5e, 0x7d,
	0x28, 0xf0, 0x1a, 0xce, 0x34, 0x35, 0x7b, 0xc9, 0x69, 0x53, 0xd0, 0x9e, 0x8a, 0xf0, 0xb4, 0x33,
	0x89, 0x8e, 0x99, 0xdc, 0xf6, 0xe0, 0xcd, 0x03, 0x97, 0xfb, 0x7a, 0x52, 0xe1, 0x1a, 0x50, 0xb7,
	0x5b, 0xcd, 0x1b, 0x59, 0x1b, 0xa9, 0xaa, 0xc1, 0x6b, 0xde, 0x79, 0xbd, 0x3e, 0xea, 0x35, 0xa1,
	0x7b, 0xc3, 0x85, 0xfe, 0xbb, 0x85, 0x2f, 0x60, 0x5e, 0xb3, 0x56, 0x93, 0x08, 0xed, 0xc8, 0x4a,
	0x9c, 0x7c, 0xa8, 0xf0, 0x25, 0xb8, 0x9c, 0x55, 0x9c, 0x8a, 0x82, 0x44, 0xe8, 0x74, 0xd2, 0xa1,
	0x81, 0x1f, 0xc1, 0xe6, 0x0d, 0x31, 0x43, 0x22, 0x74, 0x23, 0x2b, 0xf1, 0xb2, 0x65, 0xda, 0x5f,
	0x2d, 0x1d, 0xaf, 0x96, 0xae, 0xc7, 0xab, 0xe5, 0x23, 0x8a, 0x9f, 0xc0, 0x29, 0x95, 0x90, 0x3b,
	0x49, 0x22, 0x84, 0x27, 0xc7, 0xfe, 0xb0, 0x71, 0x02, 0xde, 0x64, 0xb9, 0xe8, 0x83, 0xb3, 0x2a,
	0x98, 0xd9, 0xa9, 0xa6, 0x0c, 0x4e, 0xd0, 0x03, 0x7b, 0xd5, 0x28, 0xd1, 0x72, 0x13, 0x58, 0xf1,
	0x1b, 0xf0, 0xa7, 0x1b, 0xec, 0x45, 0x2a, 0x65, 0xfb, 0x40, 0xfa, 0xe0, 0xdc, 0x1a, 0x56, 0x09,
	0xd6, 0x88, 0xc0, 0x8a, 0x13, 0x58, 0x3c, 0x5a, 0x10, 0x3a, 0x30, 0xbb, 0x91, 0x86, 0x82, 0x13,
	0x74, 0xe1, 0xf4, 0x8a, 0x69, 0xc9, 0x03, 0x2b, 0xce, 0x60, 0xf1, 0x85, 0xcc, 0x90, 0x20, 0xa7,
	0x1f, 0x2d, 0x69, 0xf3, 0xc4, 0xc3, 0x8b, 0x3f, 0x03, 0x4e, 0x67, 0x74, 0xad, 0x2a, 0x4d, 0xf8,
	0x0e, 0xec, 0x01, 0xe9, 0x26, 0xbc, 0xec, 0xf9, 0x91, 0xbb, 0xe5, 0x23, 0x93, 0x7d, 0x07, 0x67,
	0xe8, 0x69, 0xfc, 0x06, 0x70, 0x30, 0xc4, 0xf3, 0xe9, 0xdc, 0xa3, 0x70, 0xcb, 0x57, 0xff, 0x92,
	0xfb, 0x1c, 0xdb, 0x79, 0xb7, 0xee, 0x0f, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x13, 0x4f, 0x26,
	0xa8, 0x86, 0x03, 0x00, 0x00,
}
