// Code generated by protoc-gen-go.
// source: listing.proto
// DO NOT EDIT!

package datalakeproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Geo struct {
	Latitude  float64 `protobuf:"fixed64,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude" json:"longitude,omitempty"`
}

func (m *Geo) Reset()                    { *m = Geo{} }
func (m *Geo) String() string            { return proto.CompactTextString(m) }
func (*Geo) ProtoMessage()               {}
func (*Geo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Geo) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Geo) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

type RawListing struct {
	RawListingId string `protobuf:"bytes,1,opt,name=raw_listing_id,json=rawListingId" json:"raw_listing_id,omitempty"`
	ExternalId   string `protobuf:"bytes,2,opt,name=external_id,json=externalId" json:"external_id,omitempty"`
	Url          string `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
	// Basic NAP data
	CompanyName            string   `protobuf:"bytes,4,opt,name=company_name,json=companyName" json:"company_name,omitempty"`
	Address                string   `protobuf:"bytes,5,opt,name=address" json:"address,omitempty"`
	City                   string   `protobuf:"bytes,6,opt,name=city" json:"city,omitempty"`
	State                  string   `protobuf:"bytes,7,opt,name=state" json:"state,omitempty"`
	Country                string   `protobuf:"bytes,8,opt,name=country" json:"country,omitempty"`
	ZipCode                string   `protobuf:"bytes,9,opt,name=zip_code,json=zipCode" json:"zip_code,omitempty"`
	GeoLocation            *Geo     `protobuf:"bytes,10,opt,name=geo_location,json=geoLocation" json:"geo_location,omitempty"`
	Phone                  string   `protobuf:"bytes,11,opt,name=phone" json:"phone,omitempty"`
	AdditionalPhoneNumbers []string `protobuf:"bytes,12,rep,name=additional_phone_numbers,json=additionalPhoneNumbers" json:"additional_phone_numbers,omitempty"`
	Website                string   `protobuf:"bytes,13,opt,name=website" json:"website,omitempty"`
	// Extended NAP data
	NumberOfReviews     int64                       `protobuf:"varint,14,opt,name=number_of_reviews,json=numberOfReviews" json:"number_of_reviews,omitempty"`
	AverageReviewRating float64                     `protobuf:"fixed64,15,opt,name=average_review_rating,json=averageReviewRating" json:"average_review_rating,omitempty"`
	BusinessCategories  []string                    `protobuf:"bytes,16,rep,name=business_categories,json=businessCategories" json:"business_categories,omitempty"`
	SourceId            int64                       `protobuf:"varint,17,opt,name=source_id,json=sourceId" json:"source_id,omitempty"`
	Modified            *google_protobuf1.Timestamp `protobuf:"bytes,18,opt,name=modified" json:"modified,omitempty"`
	DeletedOn           *google_protobuf1.Timestamp `protobuf:"bytes,19,opt,name=deleted_on,json=deletedOn" json:"deleted_on,omitempty"`
}

func (m *RawListing) Reset()                    { *m = RawListing{} }
func (m *RawListing) String() string            { return proto.CompactTextString(m) }
func (*RawListing) ProtoMessage()               {}
func (*RawListing) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *RawListing) GetRawListingId() string {
	if m != nil {
		return m.RawListingId
	}
	return ""
}

func (m *RawListing) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *RawListing) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *RawListing) GetCompanyName() string {
	if m != nil {
		return m.CompanyName
	}
	return ""
}

func (m *RawListing) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *RawListing) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *RawListing) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *RawListing) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *RawListing) GetZipCode() string {
	if m != nil {
		return m.ZipCode
	}
	return ""
}

func (m *RawListing) GetGeoLocation() *Geo {
	if m != nil {
		return m.GeoLocation
	}
	return nil
}

func (m *RawListing) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *RawListing) GetAdditionalPhoneNumbers() []string {
	if m != nil {
		return m.AdditionalPhoneNumbers
	}
	return nil
}

func (m *RawListing) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *RawListing) GetNumberOfReviews() int64 {
	if m != nil {
		return m.NumberOfReviews
	}
	return 0
}

func (m *RawListing) GetAverageReviewRating() float64 {
	if m != nil {
		return m.AverageReviewRating
	}
	return 0
}

func (m *RawListing) GetBusinessCategories() []string {
	if m != nil {
		return m.BusinessCategories
	}
	return nil
}

func (m *RawListing) GetSourceId() int64 {
	if m != nil {
		return m.SourceId
	}
	return 0
}

func (m *RawListing) GetModified() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Modified
	}
	return nil
}

func (m *RawListing) GetDeletedOn() *google_protobuf1.Timestamp {
	if m != nil {
		return m.DeletedOn
	}
	return nil
}

func init() {
	proto.RegisterType((*Geo)(nil), "datalakeproto.Geo")
	proto.RegisterType((*RawListing)(nil), "datalakeproto.RawListing")
}

func init() { proto.RegisterFile("listing.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 499 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x92, 0x4f, 0x6f, 0xd3, 0x40,
	0x10, 0xc5, 0x95, 0xa6, 0x7f, 0xe2, 0x49, 0xd2, 0x3f, 0x13, 0x40, 0x4b, 0x40, 0x6a, 0xa8, 0x38,
	0x44, 0x1c, 0x1c, 0xa9, 0x08, 0x04, 0x27, 0x0e, 0x3d, 0x54, 0x91, 0xaa, 0x16, 0x59, 0xdc, 0x57,
	0x1b, 0xef, 0xc4, 0xac, 0xb0, 0x77, 0xad, 0xdd, 0x75, 0x43, 0xfa, 0xf5, 0xf8, 0x62, 0xc8, 0xbb,
	0x4e, 0x2a, 0x4e, 0xdc, 0xf6, 0xbd, 0xdf, 0xf3, 0xe8, 0xc9, 0x33, 0x30, 0x2e, 0x95, 0xf3, 0x4a,
	0x17, 0x69, 0x6d, 0x8d, 0x37, 0x38, 0x96, 0xc2, 0x8b, 0x52, 0xfc, 0xa2, 0x20, 0xa7, 0x97, 0x85,
	0x31, 0x45, 0x49, 0x8b, 0xa0, 0x56, 0xcd, 0x7a, 0xe1, 0x55, 0x45, 0xce, 0x8b, 0xaa, 0x8e, 0xf9,
	0xab, 0x6f, 0xd0, 0xbf, 0x25, 0x83, 0x53, 0x18, 0x94, 0xc2, 0x2b, 0xdf, 0x48, 0x62, 0xbd, 0x59,
	0x6f, 0xde, 0xcb, 0xf6, 0x1a, 0xdf, 0x42, 0x52, 0x1a, 0x5d, 0x44, 0x78, 0x10, 0xe0, 0xb3, 0x71,
	0xf5, 0xe7, 0x08, 0x20, 0x13, 0x9b, 0xbb, 0xd8, 0x02, 0xdf, 0xc3, 0xa9, 0x15, 0x1b, 0xde, 0x95,
	0xe2, 0x4a, 0x86, 0x71, 0x49, 0x36, 0xb2, 0xfb, 0xcc, 0x52, 0xe2, 0x25, 0x0c, 0xe9, 0xb7, 0x27,
	0xab, 0x45, 0xd9, 0x46, 0x0e, 0x42, 0x04, 0x76, 0xd6, 0x52, 0xe2, 0x39, 0xf4, 0x1b, 0x5b, 0xb2,
	0x7e, 0x00, 0xed, 0x13, 0xdf, 0xc1, 0x28, 0x37, 0x55, 0x2d, 0xf4, 0x96, 0x6b, 0x51, 0x11, 0x3b,
	0x0c, 0x68, 0xd8, 0x79, 0xf7, 0xa2, 0x22, 0x64, 0x70, 0x22, 0xa4, 0xb4, 0xe4, 0x1c, 0x3b, 0x0a,
	0x74, 0x27, 0x11, 0xe1, 0x30, 0x57, 0x7e, 0xcb, 0x8e, 0x83, 0x1d, 0xde, 0xf8, 0x02, 0x8e, 0x9c,
	0x17, 0x9e, 0xd8, 0x49, 0x30, 0xa3, 0x68, 0x67, 0xe4, 0xa6, 0xd1, 0xde, 0x6e, 0xd9, 0x20, 0xce,
	0xe8, 0x24, 0xbe, 0x86, 0xc1, 0x93, 0xaa, 0x79, 0x6e, 0x24, 0xb1, 0x24, 0xa2, 0x27, 0x55, 0xdf,
	0x18, 0x49, 0xf8, 0x09, 0x46, 0x05, 0x19, 0x5e, 0x9a, 0x5c, 0x78, 0x65, 0x34, 0x83, 0x59, 0x6f,
	0x3e, 0xbc, 0xc6, 0xf4, 0x9f, 0x5d, 0xa4, 0xb7, 0x64, 0xb2, 0x61, 0x41, 0xe6, 0xae, 0x8b, 0xb5,
	0x0d, 0xea, 0x9f, 0x46, 0x13, 0x1b, 0xc6, 0x06, 0x41, 0xe0, 0x17, 0x60, 0x42, 0x4a, 0xd5, 0x26,
	0x44, 0xc9, 0x83, 0xc7, 0x75, 0x53, 0xad, 0xc8, 0x3a, 0x36, 0x9a, 0xf5, 0xe7, 0x49, 0xf6, 0xea,
	0x99, 0x7f, 0x6f, 0xf1, 0x7d, 0xa4, 0x6d, 0xf7, 0x0d, 0xad, 0x9c, 0xf2, 0xc4, 0xc6, 0xb1, 0x60,
	0x27, 0xf1, 0x03, 0x5c, 0xc4, 0x11, 0xdc, 0xac, 0xb9, 0xa5, 0x47, 0x45, 0x1b, 0xc7, 0x4e, 0x67,
	0xbd, 0x79, 0x3f, 0x3b, 0x8b, 0xe0, 0x61, 0x9d, 0x45, 0x1b, 0xaf, 0xe1, 0xa5, 0x78, 0x24, 0x2b,
	0x0a, 0xea, 0x92, 0xdc, 0x8a, 0x76, 0x6d, 0xec, 0x2c, 0xac, 0x7e, 0xd2, 0xc1, 0x18, 0xcf, 0x02,
	0xc2, 0x05, 0x4c, 0x56, 0x8d, 0x53, 0x9a, 0x9c, 0xe3, 0xb9, 0xf0, 0x54, 0x18, 0xab, 0xc8, 0xb1,
	0xf3, 0x50, 0x17, 0x77, 0xe8, 0x66, 0x4f, 0xf0, 0x0d, 0x24, 0xce, 0x34, 0x36, 0xa7, 0x76, 0xfd,
	0x17, 0xa1, 0xc8, 0x20, 0x1a, 0x4b, 0x89, 0x9f, 0x61, 0x50, 0x19, 0xa9, 0xd6, 0x8a, 0x24, 0xc3,
	0xf0, 0x2b, 0xa7, 0x69, 0xbc, 0xe3, 0x74, 0x77, 0xc7, 0xe9, 0x8f, 0xdd, 0x1d, 0x67, 0xfb, 0x2c,
	0x7e, 0x05, 0x90, 0x54, 0x92, 0x27, 0xc9, 0x8d, 0x66, 0x93, 0xff, 0x7e, 0x99, 0x74, 0xe9, 0x07,
	0xbd, 0x3a, 0x0e, 0xf8, 0xe3, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfd, 0xbd, 0x5a, 0xe0, 0x4e,
	0x03, 0x00, 0x00,
}
