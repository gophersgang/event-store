// Code generated by protoc-gen-go.
// source: api.proto
// DO NOT EDIT!

/*
Package datalakeproto is a generated protocol buffer package.

It is generated from these files:
	api.proto
	listing.proto
	review.proto

It has these top-level messages:
	GetListingRequest
	GetListingResponse
	ReplaceListingRequest
	GetListingMetadataRequest
	SourceStatistic
	GetListingMetadataResponse
	SearchListingsRequest
	SearchListingsResponse
	GetListingStatsRequest
	GetListingStatsResponse
	SourceStats
	StatPoint
	GetReviewRequest
	GetReviewResponse
	ReplaceReviewRequest
	ListReviewsRequest
	ListReviewsResponse
	Geo
	RawListing
	Review
*/
package datalakeproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetListingRequest struct {
	RawListingId string `protobuf:"bytes,1,opt,name=raw_listing_id,json=rawListingId" json:"raw_listing_id,omitempty"`
	ExternalId   string `protobuf:"bytes,2,opt,name=external_id,json=externalId" json:"external_id,omitempty"`
}

func (m *GetListingRequest) Reset()                    { *m = GetListingRequest{} }
func (m *GetListingRequest) String() string            { return proto.CompactTextString(m) }
func (*GetListingRequest) ProtoMessage()               {}
func (*GetListingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetListingRequest) GetRawListingId() string {
	if m != nil {
		return m.RawListingId
	}
	return ""
}

func (m *GetListingRequest) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

type GetListingResponse struct {
	Listing *RawListing `protobuf:"bytes,1,opt,name=listing" json:"listing,omitempty"`
}

func (m *GetListingResponse) Reset()                    { *m = GetListingResponse{} }
func (m *GetListingResponse) String() string            { return proto.CompactTextString(m) }
func (*GetListingResponse) ProtoMessage()               {}
func (*GetListingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetListingResponse) GetListing() *RawListing {
	if m != nil {
		return m.Listing
	}
	return nil
}

type ReplaceListingRequest struct {
	Listing *RawListing `protobuf:"bytes,1,opt,name=listing" json:"listing,omitempty"`
}

func (m *ReplaceListingRequest) Reset()                    { *m = ReplaceListingRequest{} }
func (m *ReplaceListingRequest) String() string            { return proto.CompactTextString(m) }
func (*ReplaceListingRequest) ProtoMessage()               {}
func (*ReplaceListingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ReplaceListingRequest) GetListing() *RawListing {
	if m != nil {
		return m.Listing
	}
	return nil
}

type GetListingMetadataRequest struct {
}

func (m *GetListingMetadataRequest) Reset()                    { *m = GetListingMetadataRequest{} }
func (m *GetListingMetadataRequest) String() string            { return proto.CompactTextString(m) }
func (*GetListingMetadataRequest) ProtoMessage()               {}
func (*GetListingMetadataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type SourceStatistic struct {
	SourceId     int64 `protobuf:"varint,1,opt,name=source_id,json=sourceId" json:"source_id,omitempty"`
	ListingCount int64 `protobuf:"varint,2,opt,name=listing_count,json=listingCount" json:"listing_count,omitempty"`
}

func (m *SourceStatistic) Reset()                    { *m = SourceStatistic{} }
func (m *SourceStatistic) String() string            { return proto.CompactTextString(m) }
func (*SourceStatistic) ProtoMessage()               {}
func (*SourceStatistic) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *SourceStatistic) GetSourceId() int64 {
	if m != nil {
		return m.SourceId
	}
	return 0
}

func (m *SourceStatistic) GetListingCount() int64 {
	if m != nil {
		return m.ListingCount
	}
	return 0
}

type GetListingMetadataResponse struct {
	Sources []*SourceStatistic `protobuf:"bytes,1,rep,name=sources" json:"sources,omitempty"`
}

func (m *GetListingMetadataResponse) Reset()                    { *m = GetListingMetadataResponse{} }
func (m *GetListingMetadataResponse) String() string            { return proto.CompactTextString(m) }
func (*GetListingMetadataResponse) ProtoMessage()               {}
func (*GetListingMetadataResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetListingMetadataResponse) GetSources() []*SourceStatistic {
	if m != nil {
		return m.Sources
	}
	return nil
}

type SearchListingsRequest struct {
	CompanyName string `protobuf:"bytes,1,opt,name=company_name,json=companyName" json:"company_name,omitempty"`
	State       string `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"`
	Zipcode     string `protobuf:"bytes,3,opt,name=zipcode" json:"zipcode,omitempty"`
	Phone       string `protobuf:"bytes,4,opt,name=phone" json:"phone,omitempty"`
	Address     string `protobuf:"bytes,5,opt,name=address" json:"address,omitempty"`
	SourceId    int64  `protobuf:"varint,6,opt,name=source_id,json=sourceId" json:"source_id,omitempty"`
	// int64 cursor = 7;
	PageSize int64  `protobuf:"varint,8,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	City     string `protobuf:"bytes,9,opt,name=city" json:"city,omitempty"`
	Cursor   string `protobuf:"bytes,10,opt,name=cursor" json:"cursor,omitempty"`
}

func (m *SearchListingsRequest) Reset()                    { *m = SearchListingsRequest{} }
func (m *SearchListingsRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchListingsRequest) ProtoMessage()               {}
func (*SearchListingsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *SearchListingsRequest) GetCompanyName() string {
	if m != nil {
		return m.CompanyName
	}
	return ""
}

func (m *SearchListingsRequest) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *SearchListingsRequest) GetZipcode() string {
	if m != nil {
		return m.Zipcode
	}
	return ""
}

func (m *SearchListingsRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *SearchListingsRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *SearchListingsRequest) GetSourceId() int64 {
	if m != nil {
		return m.SourceId
	}
	return 0
}

func (m *SearchListingsRequest) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchListingsRequest) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *SearchListingsRequest) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

type SearchListingsResponse struct {
	Results []*RawListing `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
	// int64 cursor = 2;
	HasMore bool   `protobuf:"varint,3,opt,name=has_more,json=hasMore" json:"has_more,omitempty"`
	Cursor  string `protobuf:"bytes,4,opt,name=cursor" json:"cursor,omitempty"`
}

func (m *SearchListingsResponse) Reset()                    { *m = SearchListingsResponse{} }
func (m *SearchListingsResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchListingsResponse) ProtoMessage()               {}
func (*SearchListingsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *SearchListingsResponse) GetResults() []*RawListing {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *SearchListingsResponse) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

func (m *SearchListingsResponse) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

type GetListingStatsRequest struct {
}

func (m *GetListingStatsRequest) Reset()                    { *m = GetListingStatsRequest{} }
func (m *GetListingStatsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetListingStatsRequest) ProtoMessage()               {}
func (*GetListingStatsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type GetListingStatsResponse struct {
	ReplacedPerDay []*SourceStats `protobuf:"bytes,1,rep,name=replaced_per_day,json=replacedPerDay" json:"replaced_per_day,omitempty"`
	TotalPerDay    []*SourceStats `protobuf:"bytes,2,rep,name=total_per_day,json=totalPerDay" json:"total_per_day,omitempty"`
}

func (m *GetListingStatsResponse) Reset()                    { *m = GetListingStatsResponse{} }
func (m *GetListingStatsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetListingStatsResponse) ProtoMessage()               {}
func (*GetListingStatsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *GetListingStatsResponse) GetReplacedPerDay() []*SourceStats {
	if m != nil {
		return m.ReplacedPerDay
	}
	return nil
}

func (m *GetListingStatsResponse) GetTotalPerDay() []*SourceStats {
	if m != nil {
		return m.TotalPerDay
	}
	return nil
}

type SourceStats struct {
	SourceId   int64        `protobuf:"varint,1,opt,name=source_id,json=sourceId" json:"source_id,omitempty"`
	StatPoints []*StatPoint `protobuf:"bytes,2,rep,name=stat_points,json=statPoints" json:"stat_points,omitempty"`
}

func (m *SourceStats) Reset()                    { *m = SourceStats{} }
func (m *SourceStats) String() string            { return proto.CompactTextString(m) }
func (*SourceStats) ProtoMessage()               {}
func (*SourceStats) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *SourceStats) GetSourceId() int64 {
	if m != nil {
		return m.SourceId
	}
	return 0
}

func (m *SourceStats) GetStatPoints() []*StatPoint {
	if m != nil {
		return m.StatPoints
	}
	return nil
}

type StatPoint struct {
	Date  *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=date" json:"date,omitempty"`
	Value int64                       `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (m *StatPoint) Reset()                    { *m = StatPoint{} }
func (m *StatPoint) String() string            { return proto.CompactTextString(m) }
func (*StatPoint) ProtoMessage()               {}
func (*StatPoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *StatPoint) GetDate() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *StatPoint) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type GetReviewRequest struct {
	ReviewId string `protobuf:"bytes,1,opt,name=review_id,json=reviewId" json:"review_id,omitempty"`
}

func (m *GetReviewRequest) Reset()                    { *m = GetReviewRequest{} }
func (m *GetReviewRequest) String() string            { return proto.CompactTextString(m) }
func (*GetReviewRequest) ProtoMessage()               {}
func (*GetReviewRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *GetReviewRequest) GetReviewId() string {
	if m != nil {
		return m.ReviewId
	}
	return ""
}

type GetReviewResponse struct {
	Review *Review `protobuf:"bytes,1,opt,name=review" json:"review,omitempty"`
}

func (m *GetReviewResponse) Reset()                    { *m = GetReviewResponse{} }
func (m *GetReviewResponse) String() string            { return proto.CompactTextString(m) }
func (*GetReviewResponse) ProtoMessage()               {}
func (*GetReviewResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *GetReviewResponse) GetReview() *Review {
	if m != nil {
		return m.Review
	}
	return nil
}

type ReplaceReviewRequest struct {
	Review *Review `protobuf:"bytes,1,opt,name=review" json:"review,omitempty"`
}

func (m *ReplaceReviewRequest) Reset()                    { *m = ReplaceReviewRequest{} }
func (m *ReplaceReviewRequest) String() string            { return proto.CompactTextString(m) }
func (*ReplaceReviewRequest) ProtoMessage()               {}
func (*ReplaceReviewRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *ReplaceReviewRequest) GetReview() *Review {
	if m != nil {
		return m.Review
	}
	return nil
}

type ListReviewsRequest struct {
	ListingId string `protobuf:"bytes,1,opt,name=listing_id,json=listingId" json:"listing_id,omitempty"`
	Cursor    string `protobuf:"bytes,2,opt,name=cursor" json:"cursor,omitempty"`
	PageSize  int64  `protobuf:"varint,3,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
}

func (m *ListReviewsRequest) Reset()                    { *m = ListReviewsRequest{} }
func (m *ListReviewsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListReviewsRequest) ProtoMessage()               {}
func (*ListReviewsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *ListReviewsRequest) GetListingId() string {
	if m != nil {
		return m.ListingId
	}
	return ""
}

func (m *ListReviewsRequest) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

func (m *ListReviewsRequest) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type ListReviewsResponse struct {
	Reviews              []*Review `protobuf:"bytes,1,rep,name=reviews" json:"reviews,omitempty"`
	Cursor               string    `protobuf:"bytes,2,opt,name=cursor" json:"cursor,omitempty"`
	HasMore              bool      `protobuf:"varint,3,opt,name=has_more,json=hasMore" json:"has_more,omitempty"`
	TotalNumberOfReviews int64     `protobuf:"varint,4,opt,name=total_number_of_reviews,json=totalNumberOfReviews" json:"total_number_of_reviews,omitempty"`
}

func (m *ListReviewsResponse) Reset()                    { *m = ListReviewsResponse{} }
func (m *ListReviewsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListReviewsResponse) ProtoMessage()               {}
func (*ListReviewsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *ListReviewsResponse) GetReviews() []*Review {
	if m != nil {
		return m.Reviews
	}
	return nil
}

func (m *ListReviewsResponse) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

func (m *ListReviewsResponse) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

func (m *ListReviewsResponse) GetTotalNumberOfReviews() int64 {
	if m != nil {
		return m.TotalNumberOfReviews
	}
	return 0
}

func init() {
	proto.RegisterType((*GetListingRequest)(nil), "datalakeproto.GetListingRequest")
	proto.RegisterType((*GetListingResponse)(nil), "datalakeproto.GetListingResponse")
	proto.RegisterType((*ReplaceListingRequest)(nil), "datalakeproto.ReplaceListingRequest")
	proto.RegisterType((*GetListingMetadataRequest)(nil), "datalakeproto.GetListingMetadataRequest")
	proto.RegisterType((*SourceStatistic)(nil), "datalakeproto.SourceStatistic")
	proto.RegisterType((*GetListingMetadataResponse)(nil), "datalakeproto.GetListingMetadataResponse")
	proto.RegisterType((*SearchListingsRequest)(nil), "datalakeproto.SearchListingsRequest")
	proto.RegisterType((*SearchListingsResponse)(nil), "datalakeproto.SearchListingsResponse")
	proto.RegisterType((*GetListingStatsRequest)(nil), "datalakeproto.GetListingStatsRequest")
	proto.RegisterType((*GetListingStatsResponse)(nil), "datalakeproto.GetListingStatsResponse")
	proto.RegisterType((*SourceStats)(nil), "datalakeproto.SourceStats")
	proto.RegisterType((*StatPoint)(nil), "datalakeproto.StatPoint")
	proto.RegisterType((*GetReviewRequest)(nil), "datalakeproto.GetReviewRequest")
	proto.RegisterType((*GetReviewResponse)(nil), "datalakeproto.GetReviewResponse")
	proto.RegisterType((*ReplaceReviewRequest)(nil), "datalakeproto.ReplaceReviewRequest")
	proto.RegisterType((*ListReviewsRequest)(nil), "datalakeproto.ListReviewsRequest")
	proto.RegisterType((*ListReviewsResponse)(nil), "datalakeproto.ListReviewsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DataLake service

type DataLakeClient interface {
	GetListing(ctx context.Context, in *GetListingRequest, opts ...grpc.CallOption) (*GetListingResponse, error)
	ReplaceListing(ctx context.Context, in *ReplaceListingRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	SearchListings(ctx context.Context, in *SearchListingsRequest, opts ...grpc.CallOption) (*SearchListingsResponse, error)
	GetListingMetadata(ctx context.Context, in *GetListingMetadataRequest, opts ...grpc.CallOption) (*GetListingMetadataResponse, error)
	GetListingStats(ctx context.Context, in *GetListingStatsRequest, opts ...grpc.CallOption) (*GetListingStatsResponse, error)
	GetReview(ctx context.Context, in *GetReviewRequest, opts ...grpc.CallOption) (*GetReviewResponse, error)
	ReplaceReview(ctx context.Context, in *ReplaceReviewRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	ListReviews(ctx context.Context, in *ListReviewsRequest, opts ...grpc.CallOption) (*ListReviewsResponse, error)
}

type dataLakeClient struct {
	cc *grpc.ClientConn
}

func NewDataLakeClient(cc *grpc.ClientConn) DataLakeClient {
	return &dataLakeClient{cc}
}

func (c *dataLakeClient) GetListing(ctx context.Context, in *GetListingRequest, opts ...grpc.CallOption) (*GetListingResponse, error) {
	out := new(GetListingResponse)
	err := grpc.Invoke(ctx, "/datalakeproto.DataLake/GetListing", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataLakeClient) ReplaceListing(ctx context.Context, in *ReplaceListingRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/datalakeproto.DataLake/ReplaceListing", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataLakeClient) SearchListings(ctx context.Context, in *SearchListingsRequest, opts ...grpc.CallOption) (*SearchListingsResponse, error) {
	out := new(SearchListingsResponse)
	err := grpc.Invoke(ctx, "/datalakeproto.DataLake/SearchListings", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataLakeClient) GetListingMetadata(ctx context.Context, in *GetListingMetadataRequest, opts ...grpc.CallOption) (*GetListingMetadataResponse, error) {
	out := new(GetListingMetadataResponse)
	err := grpc.Invoke(ctx, "/datalakeproto.DataLake/GetListingMetadata", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataLakeClient) GetListingStats(ctx context.Context, in *GetListingStatsRequest, opts ...grpc.CallOption) (*GetListingStatsResponse, error) {
	out := new(GetListingStatsResponse)
	err := grpc.Invoke(ctx, "/datalakeproto.DataLake/GetListingStats", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataLakeClient) GetReview(ctx context.Context, in *GetReviewRequest, opts ...grpc.CallOption) (*GetReviewResponse, error) {
	out := new(GetReviewResponse)
	err := grpc.Invoke(ctx, "/datalakeproto.DataLake/GetReview", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataLakeClient) ReplaceReview(ctx context.Context, in *ReplaceReviewRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/datalakeproto.DataLake/ReplaceReview", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataLakeClient) ListReviews(ctx context.Context, in *ListReviewsRequest, opts ...grpc.CallOption) (*ListReviewsResponse, error) {
	out := new(ListReviewsResponse)
	err := grpc.Invoke(ctx, "/datalakeproto.DataLake/ListReviews", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DataLake service

type DataLakeServer interface {
	GetListing(context.Context, *GetListingRequest) (*GetListingResponse, error)
	ReplaceListing(context.Context, *ReplaceListingRequest) (*google_protobuf.Empty, error)
	SearchListings(context.Context, *SearchListingsRequest) (*SearchListingsResponse, error)
	GetListingMetadata(context.Context, *GetListingMetadataRequest) (*GetListingMetadataResponse, error)
	GetListingStats(context.Context, *GetListingStatsRequest) (*GetListingStatsResponse, error)
	GetReview(context.Context, *GetReviewRequest) (*GetReviewResponse, error)
	ReplaceReview(context.Context, *ReplaceReviewRequest) (*google_protobuf.Empty, error)
	ListReviews(context.Context, *ListReviewsRequest) (*ListReviewsResponse, error)
}

func RegisterDataLakeServer(s *grpc.Server, srv DataLakeServer) {
	s.RegisterService(&_DataLake_serviceDesc, srv)
}

func _DataLake_GetListing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetListingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataLakeServer).GetListing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datalakeproto.DataLake/GetListing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataLakeServer).GetListing(ctx, req.(*GetListingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataLake_ReplaceListing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplaceListingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataLakeServer).ReplaceListing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datalakeproto.DataLake/ReplaceListing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataLakeServer).ReplaceListing(ctx, req.(*ReplaceListingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataLake_SearchListings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchListingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataLakeServer).SearchListings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datalakeproto.DataLake/SearchListings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataLakeServer).SearchListings(ctx, req.(*SearchListingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataLake_GetListingMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetListingMetadataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataLakeServer).GetListingMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datalakeproto.DataLake/GetListingMetadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataLakeServer).GetListingMetadata(ctx, req.(*GetListingMetadataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataLake_GetListingStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetListingStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataLakeServer).GetListingStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datalakeproto.DataLake/GetListingStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataLakeServer).GetListingStats(ctx, req.(*GetListingStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataLake_GetReview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReviewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataLakeServer).GetReview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datalakeproto.DataLake/GetReview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataLakeServer).GetReview(ctx, req.(*GetReviewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataLake_ReplaceReview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplaceReviewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataLakeServer).ReplaceReview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datalakeproto.DataLake/ReplaceReview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataLakeServer).ReplaceReview(ctx, req.(*ReplaceReviewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataLake_ListReviews_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReviewsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataLakeServer).ListReviews(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datalakeproto.DataLake/ListReviews",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataLakeServer).ListReviews(ctx, req.(*ListReviewsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataLake_serviceDesc = grpc.ServiceDesc{
	ServiceName: "datalakeproto.DataLake",
	HandlerType: (*DataLakeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetListing",
			Handler:    _DataLake_GetListing_Handler,
		},
		{
			MethodName: "ReplaceListing",
			Handler:    _DataLake_ReplaceListing_Handler,
		},
		{
			MethodName: "SearchListings",
			Handler:    _DataLake_SearchListings_Handler,
		},
		{
			MethodName: "GetListingMetadata",
			Handler:    _DataLake_GetListingMetadata_Handler,
		},
		{
			MethodName: "GetListingStats",
			Handler:    _DataLake_GetListingStats_Handler,
		},
		{
			MethodName: "GetReview",
			Handler:    _DataLake_GetReview_Handler,
		},
		{
			MethodName: "ReplaceReview",
			Handler:    _DataLake_ReplaceReview_Handler,
		},
		{
			MethodName: "ListReviews",
			Handler:    _DataLake_ListReviews_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 902 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x55, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0x8e, 0x2c, 0xd9, 0x16, 0x47, 0xb6, 0x93, 0x6e, 0x6d, 0x87, 0xa6, 0xd0, 0xda, 0xd9, 0x24,
	0x85, 0x7b, 0xa8, 0x0c, 0x38, 0x28, 0xd0, 0x5e, 0x7a, 0x68, 0x1d, 0x04, 0x02, 0x1c, 0xd7, 0xa5,
	0x8a, 0x1c, 0x7a, 0x21, 0xd6, 0xe4, 0xd8, 0x22, 0x4c, 0x91, 0xec, 0xee, 0x2a, 0xae, 0x7c, 0xca,
	0x9b, 0xf4, 0x15, 0xfa, 0x42, 0x7d, 0x97, 0x82, 0xfb, 0x43, 0x89, 0xa4, 0x25, 0xb7, 0xbd, 0x71,
	0x66, 0xbe, 0xf9, 0xe1, 0xcc, 0x37, 0xb3, 0xe0, 0xb0, 0x3c, 0x1e, 0xe4, 0x3c, 0x93, 0x19, 0xd9,
	0x8e, 0x98, 0x64, 0x09, 0xbb, 0x45, 0x25, 0x7a, 0xfd, 0x9b, 0x2c, 0xbb, 0x49, 0xf0, 0x44, 0x49,
	0x57, 0xd3, 0xeb, 0x13, 0x9c, 0xe4, 0x72, 0xa6, 0xb1, 0xde, 0x61, 0xdd, 0x28, 0xe3, 0x09, 0x0a,
	0xc9, 0x26, 0xb9, 0x01, 0x6c, 0x27, 0xb1, 0x90, 0x71, 0x7a, 0x63, 0xc4, 0x2d, 0x8e, 0x1f, 0x63,
	0xbc, 0xd3, 0x12, 0xfd, 0x0d, 0x3e, 0x7b, 0x87, 0xf2, 0x5c, 0x23, 0x7c, 0xfc, 0x7d, 0x8a, 0x42,
	0x92, 0x57, 0xb0, 0xc3, 0xd9, 0x5d, 0x60, 0xfc, 0x82, 0x38, 0x72, 0x5b, 0x47, 0xad, 0x63, 0xc7,
	0xdf, 0xe2, 0xec, 0xce, 0x40, 0x87, 0x11, 0x39, 0x84, 0x1e, 0xfe, 0x21, 0x91, 0xa7, 0x2c, 0x29,
	0x20, 0x6b, 0x0a, 0x02, 0x56, 0x35, 0x8c, 0xe8, 0x10, 0xc8, 0x62, 0x6c, 0x91, 0x67, 0xa9, 0x40,
	0xf2, 0x06, 0x36, 0x4d, 0x60, 0x15, 0xb5, 0x77, 0x7a, 0x30, 0xa8, 0xfc, 0xed, 0xc0, 0x2f, 0x93,
	0xf8, 0x16, 0x49, 0xcf, 0x61, 0xcf, 0xc7, 0x3c, 0x61, 0x21, 0xd6, 0x4a, 0xfd, 0x5f, 0xd1, 0xfa,
	0x70, 0x30, 0x2f, 0xec, 0x3d, 0x4a, 0x56, 0xb8, 0x98, 0x88, 0x74, 0x04, 0x4f, 0x47, 0xd9, 0x94,
	0x87, 0x38, 0x92, 0x4c, 0x16, 0x90, 0x90, 0xf4, 0xc1, 0x11, 0x4a, 0x65, 0x5b, 0xd1, 0xf6, 0xbb,
	0x5a, 0x31, 0x8c, 0xc8, 0x4b, 0xb0, 0x0d, 0x0e, 0xc2, 0x6c, 0x9a, 0x4a, 0xd5, 0x88, 0xb6, 0xbf,
	0x65, 0x94, 0x3f, 0x15, 0x3a, 0xfa, 0x01, 0xbc, 0x87, 0x32, 0x9a, 0x96, 0x7c, 0x07, 0x9b, 0x3a,
	0x9c, 0x70, 0x5b, 0x47, 0xed, 0xe3, 0xde, 0xe9, 0x97, 0xb5, 0x9f, 0xa8, 0x15, 0xe4, 0x5b, 0x38,
	0xfd, 0xb4, 0x06, 0x7b, 0x23, 0x64, 0x3c, 0x1c, 0x9b, 0xd8, 0xc2, 0x36, 0xe6, 0x05, 0x6c, 0x85,
	0xd9, 0x24, 0x67, 0xe9, 0x2c, 0x48, 0xd9, 0x04, 0xcd, 0x04, 0x7b, 0x46, 0x77, 0xc1, 0x26, 0x48,
	0x76, 0x61, 0x5d, 0x48, 0x26, 0xd1, 0x8c, 0x4e, 0x0b, 0xc4, 0x85, 0xcd, 0xfb, 0x38, 0x0f, 0xb3,
	0x08, 0xdd, 0xb6, 0xd2, 0x5b, 0xb1, 0xc0, 0xe7, 0xe3, 0x2c, 0x45, 0xb7, 0xa3, 0xf1, 0x4a, 0x28,
	0xf0, 0x2c, 0x8a, 0x38, 0x0a, 0xe1, 0xae, 0x6b, 0xbc, 0x11, 0xab, 0x6d, 0xdb, 0xa8, 0xb5, 0xad,
	0x0f, 0x4e, 0xce, 0x6e, 0x30, 0x10, 0xf1, 0x3d, 0xba, 0x5d, 0x6d, 0x2c, 0x14, 0xa3, 0xf8, 0x1e,
	0x09, 0x81, 0x4e, 0x18, 0xcb, 0x99, 0xeb, 0xa8, 0x80, 0xea, 0x9b, 0xec, 0xc3, 0x46, 0x38, 0xe5,
	0x22, 0xe3, 0x2e, 0x28, 0xad, 0x91, 0xe8, 0xa7, 0x16, 0xec, 0xd7, 0x5b, 0x30, 0xa7, 0x1a, 0x47,
	0x31, 0x4d, 0xa4, 0xed, 0xeb, 0x2a, 0x72, 0x18, 0x24, 0x39, 0x80, 0xee, 0x98, 0x89, 0x60, 0x92,
	0x71, 0xdd, 0x80, 0xae, 0xbf, 0x39, 0x66, 0xe2, 0x7d, 0xc6, 0x71, 0xa1, 0x84, 0x4e, 0xa5, 0x04,
	0x17, 0xf6, 0xe7, 0xd3, 0x2d, 0xa6, 0x64, 0xa7, 0x40, 0xff, 0x6c, 0xc1, 0xf3, 0x86, 0xc9, 0x54,
	0x77, 0x06, 0xcf, 0xb8, 0xe6, 0x74, 0x14, 0xe4, 0xc8, 0x83, 0x88, 0xcd, 0x4c, 0x99, 0xde, 0xd2,
	0xf1, 0x0b, 0x7f, 0xc7, 0xfa, 0x5c, 0x22, 0x3f, 0x63, 0x33, 0xf2, 0x03, 0x6c, 0xcb, 0x4c, 0xb2,
	0xa4, 0x0c, 0xb1, 0xf6, 0x68, 0x88, 0x9e, 0x72, 0xd0, 0xfe, 0x14, 0xa1, 0xb7, 0x60, 0x5b, 0x4d,
	0xf5, 0xef, 0xa1, 0x57, 0x70, 0x24, 0xc8, 0xb3, 0x38, 0x95, 0xc2, 0x64, 0x72, 0xeb, 0x99, 0x24,
	0x93, 0x97, 0x05, 0xc0, 0x07, 0x61, 0x3f, 0x05, 0xfd, 0x05, 0x9c, 0xd2, 0x40, 0x06, 0xd0, 0x89,
	0x0a, 0xde, 0xe9, 0x8d, 0xf5, 0x06, 0xfa, 0x82, 0x0d, 0xec, 0x05, 0x1b, 0xfc, 0x6a, 0x2f, 0x98,
	0xaf, 0x70, 0x05, 0xf1, 0x3e, 0xb2, 0x64, 0x8a, 0x66, 0xb5, 0xb4, 0x40, 0x4f, 0xe0, 0xd9, 0x3b,
	0x94, 0xbe, 0xba, 0x66, 0x96, 0xf5, 0x7d, 0x70, 0xf4, 0x79, 0x9b, 0x1f, 0xad, 0xae, 0x56, 0x0c,
	0x23, 0xfa, 0xa3, 0xba, 0x75, 0xd6, 0xc1, 0x4c, 0xe1, 0x1b, 0xd8, 0xd0, 0x00, 0x53, 0xcd, 0x5e,
	0x9d, 0x22, 0x1a, 0x6e, 0x40, 0xf4, 0x2d, 0xec, 0x9a, 0x43, 0x54, 0x4d, 0xfc, 0x1f, 0xc3, 0x8c,
	0x81, 0x14, 0x9c, 0xd0, 0xda, 0x72, 0x67, 0xbf, 0x00, 0x68, 0xdc, 0x5c, 0x27, 0x29, 0x0f, 0xee,
	0x9c, 0x7e, 0x6b, 0x8b, 0xf4, 0xab, 0xae, 0x52, 0xbb, 0xba, 0x4a, 0xf4, 0xaf, 0x16, 0x7c, 0x5e,
	0x49, 0x65, 0xfe, 0xfb, 0xa4, 0xd8, 0x0d, 0xa5, 0x32, 0xa4, 0x5b, 0x52, 0xb1, 0x45, 0x2d, 0xcd,
	0xbe, 0x62, 0x5f, 0xbe, 0x85, 0xe7, 0x9a, 0x9b, 0xe9, 0x74, 0x72, 0x85, 0x3c, 0xc8, 0xae, 0x03,
	0x9b, 0xb3, 0xa3, 0xca, 0xdc, 0x55, 0xe6, 0x0b, 0x65, 0xfd, 0xf9, 0xda, 0x94, 0x78, 0xfa, 0xf7,
	0x3a, 0x74, 0xcf, 0x98, 0x64, 0xe7, 0xec, 0x16, 0xc9, 0x08, 0x60, 0xbe, 0x40, 0xe4, 0xa8, 0x56,
	0x64, 0xe3, 0xed, 0xf2, 0x5e, 0xac, 0x40, 0xe8, 0x5f, 0xa7, 0x4f, 0xc8, 0x25, 0xec, 0x54, 0x9f,
	0x13, 0xf2, 0xaa, 0xf1, 0xf7, 0x0f, 0xbc, 0x36, 0xde, 0x7e, 0x83, 0xaa, 0x6f, 0x8b, 0x97, 0x98,
	0x3e, 0x21, 0x01, 0xec, 0x54, 0x8f, 0x50, 0x23, 0xe2, 0x83, 0x67, 0xda, 0x7b, 0xfd, 0x08, 0xaa,
	0x2c, 0xf9, 0x76, 0xf1, 0x31, 0xb5, 0x2f, 0x08, 0x39, 0x5e, 0xfa, 0xb7, 0xb5, 0x67, 0xcd, 0xfb,
	0xfa, 0x5f, 0x20, 0xcb, 0x64, 0x57, 0xf0, 0xb4, 0x76, 0xb5, 0xc8, 0xeb, 0xa5, 0xfe, 0x8b, 0x07,
	0xcf, 0xfb, 0xea, 0x31, 0xd8, 0xc2, 0x0c, 0x9c, 0x72, 0x1b, 0xc9, 0x61, 0xd3, 0xad, 0xb2, 0x5f,
	0xde, 0xd1, 0x72, 0x40, 0x19, 0xf1, 0x02, 0xb6, 0x2b, 0xbb, 0x49, 0x5e, 0x3e, 0x3c, 0xd4, 0x6a,
	0xe4, 0xe5, 0x33, 0xfd, 0x00, 0xbd, 0x85, 0xcd, 0x21, 0x75, 0x66, 0x35, 0x17, 0xd8, 0xa3, 0xab,
	0x20, 0xb6, 0xce, 0xab, 0x0d, 0x65, 0x7c, 0xf3, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xab, 0x8e,
	0x40, 0xfe, 0xf1, 0x09, 0x00, 0x00,
}
