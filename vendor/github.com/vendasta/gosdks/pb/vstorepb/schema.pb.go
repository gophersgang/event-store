// Code generated by protoc-gen-go.
// source: schema.proto
// DO NOT EDIT!

package vstorepb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Schema struct {
	Namespace        string            `protobuf:"bytes,1,opt,name=namespace" json:"namespace,omitempty"`
	Kind             string            `protobuf:"bytes,2,opt,name=kind" json:"kind,omitempty"`
	Id               string            `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	PrimaryKey       []string          `protobuf:"bytes,4,rep,name=primary_key,json=primaryKey" json:"primary_key,omitempty"`
	Properties       []*Property       `protobuf:"bytes,5,rep,name=properties" json:"properties,omitempty"`
	SecondaryIndexes []*SecondaryIndex `protobuf:"bytes,6,rep,name=secondary_indexes,json=secondaryIndexes" json:"secondary_indexes,omitempty"`
	Version          int64             `protobuf:"varint,7,opt,name=version" json:"version,omitempty"`
	BackupConfig     *BackupConfig     `protobuf:"bytes,8,opt,name=backup_config,json=backupConfig" json:"backup_config,omitempty"`
}

func (m *Schema) Reset()                    { *m = Schema{} }
func (m *Schema) String() string            { return proto.CompactTextString(m) }
func (*Schema) ProtoMessage()               {}
func (*Schema) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *Schema) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *Schema) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Schema) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Schema) GetPrimaryKey() []string {
	if m != nil {
		return m.PrimaryKey
	}
	return nil
}

func (m *Schema) GetProperties() []*Property {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *Schema) GetSecondaryIndexes() []*SecondaryIndex {
	if m != nil {
		return m.SecondaryIndexes
	}
	return nil
}

func (m *Schema) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Schema) GetBackupConfig() *BackupConfig {
	if m != nil {
		return m.BackupConfig
	}
	return nil
}

type NamespaceConfig struct {
	Namespace                 string   `protobuf:"bytes,1,opt,name=namespace" json:"namespace,omitempty"`
	AuthorizedServiceAccounts []string `protobuf:"bytes,2,rep,name=authorized_service_accounts,json=authorizedServiceAccounts" json:"authorized_service_accounts,omitempty"`
	Version                   int64    `protobuf:"varint,3,opt,name=version" json:"version,omitempty"`
}

func (m *NamespaceConfig) Reset()                    { *m = NamespaceConfig{} }
func (m *NamespaceConfig) String() string            { return proto.CompactTextString(m) }
func (*NamespaceConfig) ProtoMessage()               {}
func (*NamespaceConfig) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *NamespaceConfig) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *NamespaceConfig) GetAuthorizedServiceAccounts() []string {
	if m != nil {
		return m.AuthorizedServiceAccounts
	}
	return nil
}

func (m *NamespaceConfig) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func init() {
	proto.RegisterType((*Schema)(nil), "vstorepb.Schema")
	proto.RegisterType((*NamespaceConfig)(nil), "vstorepb.NamespaceConfig")
}

func init() { proto.RegisterFile("schema.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 326 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x91, 0xcd, 0x4e, 0xeb, 0x30,
	0x10, 0x85, 0x95, 0xa4, 0xb7, 0x3f, 0x93, 0xde, 0x7b, 0xc1, 0x12, 0xc8, 0x14, 0x24, 0xa2, 0xae,
	0xb2, 0xea, 0xa2, 0x2c, 0x91, 0x90, 0x00, 0xb1, 0x40, 0x48, 0x08, 0xa5, 0x0f, 0x10, 0x39, 0xf6,
	0x40, 0xad, 0x2a, 0xb6, 0x65, 0xa7, 0x15, 0xe1, 0x0d, 0x78, 0x28, 0xde, 0x0d, 0xd5, 0x69, 0x94,
	0x96, 0x0d, 0x3b, 0xcf, 0x39, 0xdf, 0xd8, 0x33, 0xc7, 0x30, 0x76, 0x7c, 0x89, 0x25, 0x9b, 0x19,
	0xab, 0x2b, 0x4d, 0x86, 0x1b, 0x57, 0x69, 0x8b, 0xa6, 0x98, 0xc4, 0x4c, 0x94, 0x52, 0x35, 0xf2,
	0xe4, 0xc4, 0x21, 0xd7, 0x4a, 0x30, 0x5b, 0xe7, 0x52, 0x09, 0x7c, 0x6f, 0xe4, 0xe9, 0x57, 0x08,
	0xfd, 0x85, 0x6f, 0x27, 0x17, 0x30, 0x52, 0xac, 0x44, 0x67, 0x18, 0x47, 0x1a, 0x24, 0x41, 0x3a,
	0xca, 0x3a, 0x81, 0x10, 0xe8, 0xad, 0xa4, 0x12, 0x34, 0xf4, 0x86, 0x3f, 0x93, 0x7f, 0x10, 0x4a,
	0x41, 0x23, 0xaf, 0x84, 0x52, 0x90, 0x4b, 0x88, 0x8d, 0x95, 0xe5, 0xf6, 0x8d, 0x15, 0xd6, 0xb4,
	0x97, 0x44, 0xe9, 0x28, 0x83, 0x9d, 0xf4, 0x84, 0x35, 0x99, 0x03, 0x18, 0xab, 0x0d, 0xda, 0x4a,
	0xa2, 0xa3, 0x7f, 0x92, 0x28, 0x8d, 0xe7, 0x64, 0xd6, 0x0e, 0x3c, 0x7b, 0x69, 0xbc, 0x3a, 0xdb,
	0xa3, 0xc8, 0x03, 0x1c, 0xff, 0x18, 0x1d, 0x1d, 0xed, 0xfb, 0x56, 0xda, 0xb5, 0x2e, 0x5a, 0xe4,
	0x71, 0x4b, 0x64, 0x47, 0xee, 0xa0, 0x46, 0x47, 0x28, 0x0c, 0x36, 0x68, 0x9d, 0xd4, 0x8a, 0x0e,
	0x92, 0x20, 0x8d, 0xb2, 0xb6, 0x24, 0xd7, 0xf0, 0xb7, 0x60, 0x7c, 0xb5, 0x36, 0x39, 0xd7, 0xea,
	0x55, 0xbe, 0xd1, 0x61, 0x12, 0xa4, 0xf1, 0xfc, 0xb4, 0xbb, 0xfc, 0xce, 0xdb, 0xf7, 0xde, 0xcd,
	0xc6, 0xc5, 0x5e, 0x35, 0xfd, 0x0c, 0xe0, 0xff, 0x73, 0x1b, 0x52, 0xa3, 0xfd, 0x12, 0xe4, 0x0d,
	0x9c, 0xb3, 0x75, 0xb5, 0xd4, 0x56, 0x7e, 0xa0, 0xc8, 0x1d, 0xda, 0x8d, 0xe4, 0x98, 0x33, 0xce,
	0xf5, 0x5a, 0x55, 0x8e, 0x86, 0x3e, 0xb4, 0xb3, 0x0e, 0x59, 0x34, 0xc4, 0xed, 0x0e, 0xd8, 0x5f,
	0x24, 0x3a, 0x58, 0xa4, 0xe8, 0xfb, 0x2f, 0xbd, 0xfa, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x7e, 0xcd,
	0x57, 0x51, 0x10, 0x02, 0x00, 0x00,
}
