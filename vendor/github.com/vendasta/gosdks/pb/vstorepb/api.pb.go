// Code generated by protoc-gen-go.
// source: api.proto
// DO NOT EDIT!

package vstorepb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"
import google_protobuf1 "github.com/golang/protobuf/ptypes/any"
import google_protobuf2 "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Entity struct {
	Namespace string                `protobuf:"bytes,1,opt,name=namespace" json:"namespace,omitempty"`
	Kind      string                `protobuf:"bytes,2,opt,name=kind" json:"kind,omitempty"`
	Data      *google_protobuf1.Any `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	Version   int64                 `protobuf:"varint,4,opt,name=version" json:"version,omitempty"`
	Values    *Struct               `protobuf:"bytes,5,opt,name=values" json:"values,omitempty"`
}

func (m *Entity) Reset()                    { *m = Entity{} }
func (m *Entity) String() string            { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()               {}
func (*Entity) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Entity) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *Entity) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Entity) GetData() *google_protobuf1.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Entity) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Entity) GetValues() *Struct {
	if m != nil {
		return m.Values
	}
	return nil
}

type Struct struct {
	Values map[string]*Value `protobuf:"bytes,1,rep,name=values" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Struct) Reset()                    { *m = Struct{} }
func (m *Struct) String() string            { return proto.CompactTextString(m) }
func (*Struct) ProtoMessage()               {}
func (*Struct) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Struct) GetValues() map[string]*Value {
	if m != nil {
		return m.Values
	}
	return nil
}

type ListValue struct {
	Values []*Value `protobuf:"bytes,1,rep,name=values" json:"values,omitempty"`
}

func (m *ListValue) Reset()                    { *m = ListValue{} }
func (m *ListValue) String() string            { return proto.CompactTextString(m) }
func (*ListValue) ProtoMessage()               {}
func (*ListValue) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *ListValue) GetValues() []*Value {
	if m != nil {
		return m.Values
	}
	return nil
}

type Value struct {
	// Types that are valid to be assigned to Kind:
	//	*Value_IntValue
	//	*Value_DoubleValue
	//	*Value_StringValue
	//	*Value_BoolValue
	//	*Value_StructValue
	//	*Value_TimestampValue
	//	*Value_ListValue
	//	*Value_GeopointValue
	Kind isValue_Kind `protobuf_oneof:"kind"`
}

func (m *Value) Reset()                    { *m = Value{} }
func (m *Value) String() string            { return proto.CompactTextString(m) }
func (*Value) ProtoMessage()               {}
func (*Value) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

type isValue_Kind interface {
	isValue_Kind()
}

type Value_IntValue struct {
	IntValue int64 `protobuf:"varint,2,opt,name=int_value,json=intValue,oneof"`
}
type Value_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,3,opt,name=double_value,json=doubleValue,oneof"`
}
type Value_StringValue struct {
	StringValue string `protobuf:"bytes,4,opt,name=string_value,json=stringValue,oneof"`
}
type Value_BoolValue struct {
	BoolValue bool `protobuf:"varint,5,opt,name=bool_value,json=boolValue,oneof"`
}
type Value_StructValue struct {
	StructValue *Struct `protobuf:"bytes,6,opt,name=struct_value,json=structValue,oneof"`
}
type Value_TimestampValue struct {
	TimestampValue *google_protobuf2.Timestamp `protobuf:"bytes,7,opt,name=timestamp_value,json=timestampValue,oneof"`
}
type Value_ListValue struct {
	ListValue *ListValue `protobuf:"bytes,8,opt,name=list_value,json=listValue,oneof"`
}
type Value_GeopointValue struct {
	GeopointValue *GeoPoint `protobuf:"bytes,9,opt,name=geopoint_value,json=geopointValue,oneof"`
}

func (*Value_IntValue) isValue_Kind()       {}
func (*Value_DoubleValue) isValue_Kind()    {}
func (*Value_StringValue) isValue_Kind()    {}
func (*Value_BoolValue) isValue_Kind()      {}
func (*Value_StructValue) isValue_Kind()    {}
func (*Value_TimestampValue) isValue_Kind() {}
func (*Value_ListValue) isValue_Kind()      {}
func (*Value_GeopointValue) isValue_Kind()  {}

func (m *Value) GetKind() isValue_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (m *Value) GetIntValue() int64 {
	if x, ok := m.GetKind().(*Value_IntValue); ok {
		return x.IntValue
	}
	return 0
}

func (m *Value) GetDoubleValue() float64 {
	if x, ok := m.GetKind().(*Value_DoubleValue); ok {
		return x.DoubleValue
	}
	return 0
}

func (m *Value) GetStringValue() string {
	if x, ok := m.GetKind().(*Value_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (m *Value) GetBoolValue() bool {
	if x, ok := m.GetKind().(*Value_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (m *Value) GetStructValue() *Struct {
	if x, ok := m.GetKind().(*Value_StructValue); ok {
		return x.StructValue
	}
	return nil
}

func (m *Value) GetTimestampValue() *google_protobuf2.Timestamp {
	if x, ok := m.GetKind().(*Value_TimestampValue); ok {
		return x.TimestampValue
	}
	return nil
}

func (m *Value) GetListValue() *ListValue {
	if x, ok := m.GetKind().(*Value_ListValue); ok {
		return x.ListValue
	}
	return nil
}

func (m *Value) GetGeopointValue() *GeoPoint {
	if x, ok := m.GetKind().(*Value_GeopointValue); ok {
		return x.GeopointValue
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Value_OneofMarshaler, _Value_OneofUnmarshaler, _Value_OneofSizer, []interface{}{
		(*Value_IntValue)(nil),
		(*Value_DoubleValue)(nil),
		(*Value_StringValue)(nil),
		(*Value_BoolValue)(nil),
		(*Value_StructValue)(nil),
		(*Value_TimestampValue)(nil),
		(*Value_ListValue)(nil),
		(*Value_GeopointValue)(nil),
	}
}

func _Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Value)
	// kind
	switch x := m.Kind.(type) {
	case *Value_IntValue:
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.IntValue))
	case *Value_DoubleValue:
		b.EncodeVarint(3<<3 | proto.WireFixed64)
		b.EncodeFixed64(math.Float64bits(x.DoubleValue))
	case *Value_StringValue:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.StringValue)
	case *Value_BoolValue:
		t := uint64(0)
		if x.BoolValue {
			t = 1
		}
		b.EncodeVarint(5<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case *Value_StructValue:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StructValue); err != nil {
			return err
		}
	case *Value_TimestampValue:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TimestampValue); err != nil {
			return err
		}
	case *Value_ListValue:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ListValue); err != nil {
			return err
		}
	case *Value_GeopointValue:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GeopointValue); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Value.Kind has unexpected type %T", x)
	}
	return nil
}

func _Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Value)
	switch tag {
	case 2: // kind.int_value
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Kind = &Value_IntValue{int64(x)}
		return true, err
	case 3: // kind.double_value
		if wire != proto.WireFixed64 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed64()
		m.Kind = &Value_DoubleValue{math.Float64frombits(x)}
		return true, err
	case 4: // kind.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Kind = &Value_StringValue{x}
		return true, err
	case 5: // kind.bool_value
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Kind = &Value_BoolValue{x != 0}
		return true, err
	case 6: // kind.struct_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Struct)
		err := b.DecodeMessage(msg)
		m.Kind = &Value_StructValue{msg}
		return true, err
	case 7: // kind.timestamp_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(google_protobuf2.Timestamp)
		err := b.DecodeMessage(msg)
		m.Kind = &Value_TimestampValue{msg}
		return true, err
	case 8: // kind.list_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ListValue)
		err := b.DecodeMessage(msg)
		m.Kind = &Value_ListValue{msg}
		return true, err
	case 9: // kind.geopoint_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GeoPoint)
		err := b.DecodeMessage(msg)
		m.Kind = &Value_GeopointValue{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Value)
	// kind
	switch x := m.Kind.(type) {
	case *Value_IntValue:
		n += proto.SizeVarint(2<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.IntValue))
	case *Value_DoubleValue:
		n += proto.SizeVarint(3<<3 | proto.WireFixed64)
		n += 8
	case *Value_StringValue:
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.StringValue)))
		n += len(x.StringValue)
	case *Value_BoolValue:
		n += proto.SizeVarint(5<<3 | proto.WireVarint)
		n += 1
	case *Value_StructValue:
		s := proto.Size(x.StructValue)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Value_TimestampValue:
		s := proto.Size(x.TimestampValue)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Value_ListValue:
		s := proto.Size(x.ListValue)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Value_GeopointValue:
		s := proto.Size(x.GeopointValue)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type KeySet struct {
	Namespace string   `protobuf:"bytes,1,opt,name=namespace" json:"namespace,omitempty"`
	Kind      string   `protobuf:"bytes,2,opt,name=kind" json:"kind,omitempty"`
	Keys      []string `protobuf:"bytes,3,rep,name=keys" json:"keys,omitempty"`
}

func (m *KeySet) Reset()                    { *m = KeySet{} }
func (m *KeySet) String() string            { return proto.CompactTextString(m) }
func (*KeySet) ProtoMessage()               {}
func (*KeySet) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *KeySet) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *KeySet) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *KeySet) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

type CreateRequest struct {
	Entity *Entity `protobuf:"bytes,1,opt,name=entity" json:"entity,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *CreateRequest) GetEntity() *Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

type GetRequest struct {
	KeySets []*KeySet `protobuf:"bytes,1,rep,name=key_sets,json=keySets" json:"key_sets,omitempty"`
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *GetRequest) GetKeySets() []*KeySet {
	if m != nil {
		return m.KeySets
	}
	return nil
}

type GetResponse struct {
	Entities []*EntityResult `protobuf:"bytes,1,rep,name=entities" json:"entities,omitempty"`
}

func (m *GetResponse) Reset()                    { *m = GetResponse{} }
func (m *GetResponse) String() string            { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()               {}
func (*GetResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *GetResponse) GetEntities() []*EntityResult {
	if m != nil {
		return m.Entities
	}
	return nil
}

type UpdateRequest struct {
	Entity *Entity `protobuf:"bytes,1,opt,name=entity" json:"entity,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *UpdateRequest) GetEntity() *Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

type EntityResult struct {
	KeySet *KeySet `protobuf:"bytes,1,opt,name=key_set,json=keySet" json:"key_set,omitempty"`
	Entity *Entity `protobuf:"bytes,2,opt,name=entity" json:"entity,omitempty"`
}

func (m *EntityResult) Reset()                    { *m = EntityResult{} }
func (m *EntityResult) String() string            { return proto.CompactTextString(m) }
func (*EntityResult) ProtoMessage()               {}
func (*EntityResult) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *EntityResult) GetKeySet() *KeySet {
	if m != nil {
		return m.KeySet
	}
	return nil
}

func (m *EntityResult) GetEntity() *Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

type LookupFilter struct {
	Keys []string `protobuf:"bytes,1,rep,name=keys" json:"keys,omitempty"`
}

func (m *LookupFilter) Reset()                    { *m = LookupFilter{} }
func (m *LookupFilter) String() string            { return proto.CompactTextString(m) }
func (*LookupFilter) ProtoMessage()               {}
func (*LookupFilter) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *LookupFilter) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

type LookupRequest struct {
	Namespace string        `protobuf:"bytes,1,opt,name=namespace" json:"namespace,omitempty"`
	Kind      string        `protobuf:"bytes,2,opt,name=kind" json:"kind,omitempty"`
	PageSize  int64         `protobuf:"varint,3,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	Cursor    string        `protobuf:"bytes,4,opt,name=cursor" json:"cursor,omitempty"`
	Filter    *LookupFilter `protobuf:"bytes,5,opt,name=filter" json:"filter,omitempty"`
}

func (m *LookupRequest) Reset()                    { *m = LookupRequest{} }
func (m *LookupRequest) String() string            { return proto.CompactTextString(m) }
func (*LookupRequest) ProtoMessage()               {}
func (*LookupRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *LookupRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *LookupRequest) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *LookupRequest) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *LookupRequest) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

func (m *LookupRequest) GetFilter() *LookupFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

type LookupResponse struct {
	Entities   []*EntityResult `protobuf:"bytes,1,rep,name=entities" json:"entities,omitempty"`
	NextCursor string          `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor" json:"next_cursor,omitempty"`
	HasMore    bool            `protobuf:"varint,3,opt,name=has_more,json=hasMore" json:"has_more,omitempty"`
}

func (m *LookupResponse) Reset()                    { *m = LookupResponse{} }
func (m *LookupResponse) String() string            { return proto.CompactTextString(m) }
func (*LookupResponse) ProtoMessage()               {}
func (*LookupResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *LookupResponse) GetEntities() []*EntityResult {
	if m != nil {
		return m.Entities
	}
	return nil
}

func (m *LookupResponse) GetNextCursor() string {
	if m != nil {
		return m.NextCursor
	}
	return ""
}

func (m *LookupResponse) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

func init() {
	proto.RegisterType((*Entity)(nil), "vstorepb.Entity")
	proto.RegisterType((*Struct)(nil), "vstorepb.Struct")
	proto.RegisterType((*ListValue)(nil), "vstorepb.ListValue")
	proto.RegisterType((*Value)(nil), "vstorepb.Value")
	proto.RegisterType((*KeySet)(nil), "vstorepb.KeySet")
	proto.RegisterType((*CreateRequest)(nil), "vstorepb.CreateRequest")
	proto.RegisterType((*GetRequest)(nil), "vstorepb.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "vstorepb.GetResponse")
	proto.RegisterType((*UpdateRequest)(nil), "vstorepb.UpdateRequest")
	proto.RegisterType((*EntityResult)(nil), "vstorepb.EntityResult")
	proto.RegisterType((*LookupFilter)(nil), "vstorepb.LookupFilter")
	proto.RegisterType((*LookupRequest)(nil), "vstorepb.LookupRequest")
	proto.RegisterType((*LookupResponse)(nil), "vstorepb.LookupResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for VStore service

type VStoreClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	Lookup(ctx context.Context, in *LookupRequest, opts ...grpc.CallOption) (*LookupResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
}

type vStoreClient struct {
	cc *grpc.ClientConn
}

func NewVStoreClient(cc *grpc.ClientConn) VStoreClient {
	return &vStoreClient{cc}
}

func (c *vStoreClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/vstorepb.VStore/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vStoreClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := grpc.Invoke(ctx, "/vstorepb.VStore/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vStoreClient) Lookup(ctx context.Context, in *LookupRequest, opts ...grpc.CallOption) (*LookupResponse, error) {
	out := new(LookupResponse)
	err := grpc.Invoke(ctx, "/vstorepb.VStore/Lookup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vStoreClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/vstorepb.VStore/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for VStore service

type VStoreServer interface {
	Create(context.Context, *CreateRequest) (*google_protobuf.Empty, error)
	Get(context.Context, *GetRequest) (*GetResponse, error)
	Lookup(context.Context, *LookupRequest) (*LookupResponse, error)
	Update(context.Context, *UpdateRequest) (*google_protobuf.Empty, error)
}

func RegisterVStoreServer(s *grpc.Server, srv VStoreServer) {
	s.RegisterService(&_VStore_serviceDesc, srv)
}

func _VStore_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VStoreServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vstorepb.VStore/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VStoreServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VStore_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VStoreServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vstorepb.VStore/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VStoreServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VStore_Lookup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VStoreServer).Lookup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vstorepb.VStore/Lookup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VStoreServer).Lookup(ctx, req.(*LookupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VStore_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VStoreServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vstorepb.VStore/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VStoreServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "vstorepb.VStore",
	HandlerType: (*VStoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _VStore_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _VStore_Get_Handler,
		},
		{
			MethodName: "Lookup",
			Handler:    _VStore_Lookup_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _VStore_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 786 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x55, 0x41, 0x6f, 0xf3, 0x44,
	0x10, 0x8d, 0xeb, 0xd6, 0xb1, 0x27, 0x69, 0xbf, 0x4f, 0x4b, 0x29, 0x6e, 0x5a, 0xd4, 0xc8, 0x08,
	0x11, 0x84, 0xe4, 0x4a, 0x21, 0x48, 0x94, 0x8a, 0x43, 0xa9, 0x42, 0x23, 0x28, 0x08, 0x6d, 0xa0,
	0xd7, 0xc8, 0x49, 0xa6, 0xa9, 0x15, 0xc7, 0x6b, 0xbc, 0xeb, 0x0a, 0xf7, 0xc4, 0x99, 0x1f, 0x82,
	0xf8, 0x87, 0x5c, 0x91, 0x77, 0xd7, 0x8e, 0x93, 0x80, 0xd0, 0xd7, 0x53, 0xbd, 0x6f, 0xde, 0x9b,
	0x79, 0x33, 0x3b, 0xdb, 0x80, 0x13, 0x24, 0xa1, 0x9f, 0xa4, 0x4c, 0x30, 0x62, 0x3f, 0x73, 0xc1,
	0x52, 0x4c, 0xa6, 0x9d, 0xb3, 0x05, 0x63, 0x8b, 0x08, 0x2f, 0x25, 0x3e, 0xcd, 0x1e, 0x2f, 0x71,
	0x95, 0x88, 0x5c, 0xd1, 0x3a, 0xa7, 0xdb, 0xc1, 0x20, 0x2e, 0x43, 0x17, 0xdb, 0x21, 0x11, 0xae,
	0x90, 0x8b, 0x60, 0x95, 0x68, 0x42, 0x7b, 0xc6, 0x56, 0x2b, 0x16, 0xab, 0x93, 0xf7, 0x97, 0x01,
	0xd6, 0x30, 0x16, 0xa1, 0xc8, 0xc9, 0x39, 0x38, 0x71, 0xb0, 0x42, 0x9e, 0x04, 0x33, 0x74, 0x8d,
	0xae, 0xd1, 0x73, 0xe8, 0x1a, 0x20, 0x04, 0xf6, 0x97, 0x61, 0x3c, 0x77, 0xf7, 0x64, 0x40, 0x7e,
	0x93, 0x1e, 0xec, 0xcf, 0x03, 0x11, 0xb8, 0x66, 0xd7, 0xe8, 0xb5, 0xfa, 0xc7, 0xbe, 0x2a, 0xed,
	0x97, 0xa5, 0xfd, 0x9b, 0x38, 0xa7, 0x92, 0x41, 0x5c, 0x68, 0x3e, 0x63, 0xca, 0x43, 0x16, 0xbb,
	0xfb, 0x5d, 0xa3, 0x67, 0xd2, 0xf2, 0x48, 0x7a, 0x60, 0x3d, 0x07, 0x51, 0x86, 0xdc, 0x3d, 0x90,
	0x59, 0xde, 0xfa, 0xe5, 0x08, 0xfc, 0xb1, 0x48, 0xb3, 0x99, 0xa0, 0x3a, 0xee, 0xfd, 0x61, 0x80,
	0xa5, 0x20, 0x32, 0xa8, 0x44, 0x46, 0xd7, 0xec, 0xb5, 0xfa, 0xe7, 0xdb, 0x22, 0xff, 0x41, 0x86,
	0x87, 0xb1, 0x48, 0xf3, 0x32, 0x41, 0xe7, 0x3b, 0x68, 0xd5, 0x60, 0xf2, 0x16, 0xcc, 0x25, 0xe6,
	0xba, 0xd3, 0xe2, 0x93, 0x7c, 0x0c, 0x07, 0x92, 0x2a, 0x9b, 0x6c, 0xf5, 0xdf, 0xac, 0xb3, 0x4a,
	0x1d, 0x55, 0xd1, 0xaf, 0xf6, 0xbe, 0x34, 0xbc, 0x01, 0x38, 0xf7, 0x21, 0x17, 0x12, 0x27, 0x9f,
	0x6c, 0xd9, 0xd9, 0x11, 0x56, 0x2d, 0x98, 0x70, 0xa0, 0x24, 0x1f, 0x82, 0x13, 0xc6, 0x62, 0xb2,
	0x2e, 0x67, 0x8e, 0x1a, 0xd4, 0x0e, 0x63, 0x9d, 0xf1, 0x23, 0x68, 0xcf, 0x59, 0x36, 0x8d, 0x50,
	0x33, 0x8a, 0x09, 0x1b, 0xa3, 0x06, 0x6d, 0x29, 0xb4, 0x22, 0x71, 0x91, 0x86, 0xf1, 0x42, 0x93,
	0x8a, 0xc9, 0x3a, 0x05, 0x49, 0xa1, 0x8a, 0x74, 0x01, 0x30, 0x65, 0x2c, 0xd2, 0x94, 0x62, 0xc6,
	0xf6, 0xa8, 0x41, 0x9d, 0x02, 0x53, 0x84, 0x2f, 0x64, 0x96, 0x6c, 0x56, 0x9a, 0xb1, 0xfe, 0xfd,
	0x1a, 0x74, 0xde, 0x6c, 0xa6, 0x1d, 0x0e, 0xe1, 0x4d, 0xb5, 0x59, 0x5a, 0xd9, 0x94, 0xca, 0xce,
	0xce, 0x1a, 0xfc, 0x5c, 0xf2, 0x46, 0x0d, 0x7a, 0x54, 0x89, 0x54, 0x9a, 0x01, 0x40, 0x14, 0xf2,
	0xb2, 0xb6, 0x2d, 0x33, 0xbc, 0xb7, 0xae, 0x5d, 0xcd, 0xb8, 0xf0, 0x1c, 0x55, 0x03, 0xbf, 0x86,
	0xa3, 0x05, 0xb2, 0x84, 0xad, 0x47, 0xe8, 0x48, 0x25, 0x59, 0x2b, 0xef, 0x90, 0xfd, 0x54, 0xc4,
	0x47, 0x0d, 0x7a, 0x58, 0x72, 0xa5, 0xf8, 0x1b, 0x4b, 0x6d, 0xb2, 0xf7, 0x23, 0x58, 0xdf, 0x63,
	0x3e, 0x46, 0xf1, 0x8a, 0xcd, 0x2f, 0x30, 0xcc, 0xb9, 0x6b, 0x76, 0x4d, 0x89, 0x61, 0xce, 0xbd,
	0x2b, 0x38, 0xbc, 0x4d, 0x31, 0x10, 0x48, 0xf1, 0xd7, 0x0c, 0xb9, 0x28, 0x56, 0x1b, 0xe5, 0xd3,
	0x92, 0x39, 0x37, 0x66, 0xaa, 0x9e, 0x1c, 0xd5, 0x71, 0xef, 0x0a, 0xe0, 0x0e, 0x45, 0xa9, 0xfb,
	0x0c, 0xec, 0x25, 0xe6, 0x13, 0x8e, 0xa2, 0x5c, 0xa8, 0x9a, 0x52, 0x59, 0xa6, 0xcd, 0xa5, 0xfc,
	0xcb, 0xbd, 0x1b, 0x68, 0x49, 0x29, 0x4f, 0x58, 0xcc, 0x91, 0xf4, 0xc1, 0x96, 0x39, 0xc3, 0x6a,
	0x19, 0x4f, 0x76, 0xaa, 0x22, 0xcf, 0x22, 0x41, 0x2b, 0x5e, 0x61, 0xfc, 0x97, 0x64, 0xfe, 0x2a,
	0xe3, 0x33, 0x68, 0xd7, 0x93, 0x92, 0x4f, 0xa1, 0xa9, 0xad, 0xef, 0x4a, 0xb5, 0x73, 0x4b, 0x39,
	0xaf, 0x15, 0xd9, 0xfb, 0x9f, 0x22, 0x1e, 0xb4, 0xef, 0x19, 0x5b, 0x66, 0xc9, 0xb7, 0x61, 0x24,
	0x30, 0xad, 0x86, 0x6f, 0xd4, 0x86, 0xff, 0xa7, 0x01, 0x87, 0x8a, 0x54, 0x36, 0xf1, 0xee, 0x97,
	0x7a, 0x06, 0x4e, 0x12, 0x2c, 0x70, 0xc2, 0xc3, 0x17, 0xf5, 0xe2, 0x4c, 0x6a, 0x17, 0xc0, 0x38,
	0x7c, 0x41, 0x72, 0x02, 0xd6, 0x2c, 0x4b, 0x39, 0x4b, 0xd5, 0x33, 0xa3, 0xfa, 0x44, 0x7c, 0xb0,
	0x1e, 0xa5, 0x2d, 0xfd, 0xff, 0xab, 0x36, 0xee, 0xba, 0x69, 0xaa, 0x59, 0xde, 0xef, 0x06, 0x1c,
	0x95, 0x46, 0x5f, 0x7f, 0x67, 0xe4, 0x02, 0x5a, 0x31, 0xfe, 0x26, 0x26, 0xda, 0x93, 0x6a, 0x03,
	0x0a, 0xe8, 0x56, 0xf9, 0x3a, 0x05, 0xfb, 0x29, 0xe0, 0x93, 0x15, 0x4b, 0x55, 0x2f, 0x36, 0x6d,
	0x3e, 0x05, 0xfc, 0x07, 0x96, 0x62, 0xff, 0x6f, 0x03, 0xac, 0x87, 0x71, 0x91, 0x9f, 0x5c, 0x83,
	0xa5, 0x76, 0x96, 0x7c, 0xb0, 0x2e, 0xb9, 0xb1, 0xc5, 0x9d, 0x93, 0x9d, 0xf7, 0x3c, 0x2c, 0x7e,
	0x89, 0xbc, 0x06, 0x19, 0x80, 0x79, 0x87, 0x82, 0x1c, 0xd7, 0x1f, 0x5d, 0xb9, 0xc4, 0x9d, 0xf7,
	0xb7, 0x50, 0xd5, 0xab, 0xd7, 0x20, 0x5f, 0x83, 0xa5, 0xfa, 0xaf, 0x97, 0xdc, 0xb8, 0xba, 0x8e,
	0xbb, 0x1b, 0xa8, 0xe4, 0xd7, 0x60, 0xa9, 0x65, 0xad, 0xcb, 0x37, 0xd6, 0xf7, 0xbf, 0x1d, 0x4f,
	0x2d, 0x89, 0x7c, 0xfe, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x77, 0x33, 0x3c, 0xf8, 0x72, 0x07,
	0x00, 0x00,
}
