// Code generated by protoc-gen-go.
// source: api.proto
// DO NOT EDIT!

/*
Package iam_v1 is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	Subject
	SubjectResult
	SingleValueAttribute
	MultiValueAttribute
	Query
	Mutation
	NamespacedContext
	TypedContext
	Context
	RegisterSubjectRequest
	GetSubjectsRequest
	GetSubjectsByEmailRequest
	AuthenticateSubjectRequest
	DeleteSubjectRequest
	ResetSubjectPasswordRequest
	SearchSubjectRequest
	GetSubjectContextRequest
	MutateAttributesRequest
	ChangeSubjectEmailRequest
	RegisterSubjectResponse
	GetSubjectsResponse
	SearchSubjectResponse
	GetSubjectContextResponse
*/
package iam_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type OrderByDirection int32

const (
	OrderByDirection_ASCENDING  OrderByDirection = 0
	OrderByDirection_DESCENDING OrderByDirection = 1
)

var OrderByDirection_name = map[int32]string{
	0: "ASCENDING",
	1: "DESCENDING",
}
var OrderByDirection_value = map[string]int32{
	"ASCENDING":  0,
	"DESCENDING": 1,
}

func (x OrderByDirection) String() string {
	return proto.EnumName(OrderByDirection_name, int32(x))
}
func (OrderByDirection) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Subject struct {
	SubjectId  string                      `protobuf:"bytes,1,opt,name=subject_id,json=subjectId" json:"subject_id,omitempty"`
	Email      string                      `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Attributes []*MultiValueAttribute      `protobuf:"bytes,4,rep,name=attributes" json:"attributes,omitempty"`
	Created    *google_protobuf1.Timestamp `protobuf:"bytes,5,opt,name=created" json:"created,omitempty"`
	Updated    *google_protobuf1.Timestamp `protobuf:"bytes,6,opt,name=updated" json:"updated,omitempty"`
	LastLogin  *google_protobuf1.Timestamp `protobuf:"bytes,7,opt,name=last_login,json=lastLogin" json:"last_login,omitempty"`
}

func (m *Subject) Reset()                    { *m = Subject{} }
func (m *Subject) String() string            { return proto.CompactTextString(m) }
func (*Subject) ProtoMessage()               {}
func (*Subject) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Subject) GetSubjectId() string {
	if m != nil {
		return m.SubjectId
	}
	return ""
}

func (m *Subject) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Subject) GetAttributes() []*MultiValueAttribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *Subject) GetCreated() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Subject) GetUpdated() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *Subject) GetLastLogin() *google_protobuf1.Timestamp {
	if m != nil {
		return m.LastLogin
	}
	return nil
}

type SubjectResult struct {
	Subject *Subject `protobuf:"bytes,1,opt,name=subject" json:"subject,omitempty"`
}

func (m *SubjectResult) Reset()                    { *m = SubjectResult{} }
func (m *SubjectResult) String() string            { return proto.CompactTextString(m) }
func (*SubjectResult) ProtoMessage()               {}
func (*SubjectResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SubjectResult) GetSubject() *Subject {
	if m != nil {
		return m.Subject
	}
	return nil
}

type SingleValueAttribute struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *SingleValueAttribute) Reset()                    { *m = SingleValueAttribute{} }
func (m *SingleValueAttribute) String() string            { return proto.CompactTextString(m) }
func (*SingleValueAttribute) ProtoMessage()               {}
func (*SingleValueAttribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SingleValueAttribute) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SingleValueAttribute) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type MultiValueAttribute struct {
	Key    string   `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Values []string `protobuf:"bytes,2,rep,name=values" json:"values,omitempty"`
}

func (m *MultiValueAttribute) Reset()                    { *m = MultiValueAttribute{} }
func (m *MultiValueAttribute) String() string            { return proto.CompactTextString(m) }
func (*MultiValueAttribute) ProtoMessage()               {}
func (*MultiValueAttribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *MultiValueAttribute) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *MultiValueAttribute) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

type Query struct {
	SearchTerm    string   `protobuf:"bytes,1,opt,name=search_term,json=searchTerm" json:"search_term,omitempty"`
	AttributeKeys []string `protobuf:"bytes,2,rep,name=attribute_keys,json=attributeKeys" json:"attribute_keys,omitempty"`
}

func (m *Query) Reset()                    { *m = Query{} }
func (m *Query) String() string            { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()               {}
func (*Query) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Query) GetSearchTerm() string {
	if m != nil {
		return m.SearchTerm
	}
	return ""
}

func (m *Query) GetAttributeKeys() []string {
	if m != nil {
		return m.AttributeKeys
	}
	return nil
}

type Mutation struct {
	// Types that are valid to be assigned to Operation:
	//	*Mutation_Add
	//	*Mutation_Replace
	//	*Mutation_Remove
	//	*Mutation_DropKey
	Operation isMutation_Operation `protobuf_oneof:"operation"`
}

func (m *Mutation) Reset()                    { *m = Mutation{} }
func (m *Mutation) String() string            { return proto.CompactTextString(m) }
func (*Mutation) ProtoMessage()               {}
func (*Mutation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type isMutation_Operation interface {
	isMutation_Operation()
}

type Mutation_Add struct {
	Add *SingleValueAttribute `protobuf:"bytes,1,opt,name=add,oneof"`
}
type Mutation_Replace struct {
	Replace *MultiValueAttribute `protobuf:"bytes,2,opt,name=replace,oneof"`
}
type Mutation_Remove struct {
	Remove *SingleValueAttribute `protobuf:"bytes,3,opt,name=remove,oneof"`
}
type Mutation_DropKey struct {
	DropKey string `protobuf:"bytes,4,opt,name=drop_key,json=dropKey,oneof"`
}

func (*Mutation_Add) isMutation_Operation()     {}
func (*Mutation_Replace) isMutation_Operation() {}
func (*Mutation_Remove) isMutation_Operation()  {}
func (*Mutation_DropKey) isMutation_Operation() {}

func (m *Mutation) GetOperation() isMutation_Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

func (m *Mutation) GetAdd() *SingleValueAttribute {
	if x, ok := m.GetOperation().(*Mutation_Add); ok {
		return x.Add
	}
	return nil
}

func (m *Mutation) GetReplace() *MultiValueAttribute {
	if x, ok := m.GetOperation().(*Mutation_Replace); ok {
		return x.Replace
	}
	return nil
}

func (m *Mutation) GetRemove() *SingleValueAttribute {
	if x, ok := m.GetOperation().(*Mutation_Remove); ok {
		return x.Remove
	}
	return nil
}

func (m *Mutation) GetDropKey() string {
	if x, ok := m.GetOperation().(*Mutation_DropKey); ok {
		return x.DropKey
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Mutation) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Mutation_OneofMarshaler, _Mutation_OneofUnmarshaler, _Mutation_OneofSizer, []interface{}{
		(*Mutation_Add)(nil),
		(*Mutation_Replace)(nil),
		(*Mutation_Remove)(nil),
		(*Mutation_DropKey)(nil),
	}
}

func _Mutation_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Mutation)
	// operation
	switch x := m.Operation.(type) {
	case *Mutation_Add:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Add); err != nil {
			return err
		}
	case *Mutation_Replace:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Replace); err != nil {
			return err
		}
	case *Mutation_Remove:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Remove); err != nil {
			return err
		}
	case *Mutation_DropKey:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.DropKey)
	case nil:
	default:
		return fmt.Errorf("Mutation.Operation has unexpected type %T", x)
	}
	return nil
}

func _Mutation_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Mutation)
	switch tag {
	case 1: // operation.add
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SingleValueAttribute)
		err := b.DecodeMessage(msg)
		m.Operation = &Mutation_Add{msg}
		return true, err
	case 2: // operation.replace
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MultiValueAttribute)
		err := b.DecodeMessage(msg)
		m.Operation = &Mutation_Replace{msg}
		return true, err
	case 3: // operation.remove
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SingleValueAttribute)
		err := b.DecodeMessage(msg)
		m.Operation = &Mutation_Remove{msg}
		return true, err
	case 4: // operation.drop_key
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Operation = &Mutation_DropKey{x}
		return true, err
	default:
		return false, nil
	}
}

func _Mutation_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Mutation)
	// operation
	switch x := m.Operation.(type) {
	case *Mutation_Add:
		s := proto.Size(x.Add)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Mutation_Replace:
		s := proto.Size(x.Replace)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Mutation_Remove:
		s := proto.Size(x.Remove)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Mutation_DropKey:
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.DropKey)))
		n += len(x.DropKey)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type NamespacedContext struct {
	Namespace string `protobuf:"bytes,1,opt,name=namespace" json:"namespace,omitempty"`
	Type      string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
}

func (m *NamespacedContext) Reset()                    { *m = NamespacedContext{} }
func (m *NamespacedContext) String() string            { return proto.CompactTextString(m) }
func (*NamespacedContext) ProtoMessage()               {}
func (*NamespacedContext) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *NamespacedContext) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *NamespacedContext) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type TypedContext struct {
	Type string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
}

func (m *TypedContext) Reset()                    { *m = TypedContext{} }
func (m *TypedContext) String() string            { return proto.CompactTextString(m) }
func (*TypedContext) ProtoMessage()               {}
func (*TypedContext) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *TypedContext) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type Context struct {
	// Types that are valid to be assigned to Context:
	//	*Context_Namespaced
	//	*Context_Typed
	Context isContext_Context `protobuf_oneof:"context"`
}

func (m *Context) Reset()                    { *m = Context{} }
func (m *Context) String() string            { return proto.CompactTextString(m) }
func (*Context) ProtoMessage()               {}
func (*Context) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type isContext_Context interface {
	isContext_Context()
}

type Context_Namespaced struct {
	Namespaced *NamespacedContext `protobuf:"bytes,1,opt,name=namespaced,oneof"`
}
type Context_Typed struct {
	Typed *TypedContext `protobuf:"bytes,2,opt,name=typed,oneof"`
}

func (*Context_Namespaced) isContext_Context() {}
func (*Context_Typed) isContext_Context()      {}

func (m *Context) GetContext() isContext_Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Context) GetNamespaced() *NamespacedContext {
	if x, ok := m.GetContext().(*Context_Namespaced); ok {
		return x.Namespaced
	}
	return nil
}

func (m *Context) GetTyped() *TypedContext {
	if x, ok := m.GetContext().(*Context_Typed); ok {
		return x.Typed
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Context) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Context_OneofMarshaler, _Context_OneofUnmarshaler, _Context_OneofSizer, []interface{}{
		(*Context_Namespaced)(nil),
		(*Context_Typed)(nil),
	}
}

func _Context_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Context)
	// context
	switch x := m.Context.(type) {
	case *Context_Namespaced:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Namespaced); err != nil {
			return err
		}
	case *Context_Typed:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Typed); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Context.Context has unexpected type %T", x)
	}
	return nil
}

func _Context_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Context)
	switch tag {
	case 1: // context.namespaced
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NamespacedContext)
		err := b.DecodeMessage(msg)
		m.Context = &Context_Namespaced{msg}
		return true, err
	case 2: // context.typed
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TypedContext)
		err := b.DecodeMessage(msg)
		m.Context = &Context_Typed{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Context_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Context)
	// context
	switch x := m.Context.(type) {
	case *Context_Namespaced:
		s := proto.Size(x.Namespaced)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Context_Typed:
		s := proto.Size(x.Typed)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// *******************
// Requests
// *******************
type RegisterSubjectRequest struct {
	Context    *Context               `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
	Email      string                 `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Password   string                 `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
	Attributes []*MultiValueAttribute `protobuf:"bytes,4,rep,name=attributes" json:"attributes,omitempty"`
}

func (m *RegisterSubjectRequest) Reset()                    { *m = RegisterSubjectRequest{} }
func (m *RegisterSubjectRequest) String() string            { return proto.CompactTextString(m) }
func (*RegisterSubjectRequest) ProtoMessage()               {}
func (*RegisterSubjectRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *RegisterSubjectRequest) GetContext() *Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *RegisterSubjectRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *RegisterSubjectRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *RegisterSubjectRequest) GetAttributes() []*MultiValueAttribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

type GetSubjectsRequest struct {
	Context    *Context `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
	SubjectIds []string `protobuf:"bytes,2,rep,name=subject_ids,json=subjectIds" json:"subject_ids,omitempty"`
}

func (m *GetSubjectsRequest) Reset()                    { *m = GetSubjectsRequest{} }
func (m *GetSubjectsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetSubjectsRequest) ProtoMessage()               {}
func (*GetSubjectsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *GetSubjectsRequest) GetContext() *Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *GetSubjectsRequest) GetSubjectIds() []string {
	if m != nil {
		return m.SubjectIds
	}
	return nil
}

type GetSubjectsByEmailRequest struct {
	Context *Context `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
	Emails  []string `protobuf:"bytes,2,rep,name=emails" json:"emails,omitempty"`
}

func (m *GetSubjectsByEmailRequest) Reset()                    { *m = GetSubjectsByEmailRequest{} }
func (m *GetSubjectsByEmailRequest) String() string            { return proto.CompactTextString(m) }
func (*GetSubjectsByEmailRequest) ProtoMessage()               {}
func (*GetSubjectsByEmailRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *GetSubjectsByEmailRequest) GetContext() *Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *GetSubjectsByEmailRequest) GetEmails() []string {
	if m != nil {
		return m.Emails
	}
	return nil
}

type AuthenticateSubjectRequest struct {
	Context  *Context `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
	Email    string   `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Password string   `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
}

func (m *AuthenticateSubjectRequest) Reset()                    { *m = AuthenticateSubjectRequest{} }
func (m *AuthenticateSubjectRequest) String() string            { return proto.CompactTextString(m) }
func (*AuthenticateSubjectRequest) ProtoMessage()               {}
func (*AuthenticateSubjectRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *AuthenticateSubjectRequest) GetContext() *Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *AuthenticateSubjectRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *AuthenticateSubjectRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type DeleteSubjectRequest struct {
	Context   *Context `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
	SubjectId string   `protobuf:"bytes,2,opt,name=subject_id,json=subjectId" json:"subject_id,omitempty"`
}

func (m *DeleteSubjectRequest) Reset()                    { *m = DeleteSubjectRequest{} }
func (m *DeleteSubjectRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteSubjectRequest) ProtoMessage()               {}
func (*DeleteSubjectRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *DeleteSubjectRequest) GetContext() *Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *DeleteSubjectRequest) GetSubjectId() string {
	if m != nil {
		return m.SubjectId
	}
	return ""
}

type ResetSubjectPasswordRequest struct {
	Context     *Context `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
	SubjectId   string   `protobuf:"bytes,2,opt,name=subject_id,json=subjectId" json:"subject_id,omitempty"`
	NewPassword string   `protobuf:"bytes,3,opt,name=new_password,json=newPassword" json:"new_password,omitempty"`
}

func (m *ResetSubjectPasswordRequest) Reset()                    { *m = ResetSubjectPasswordRequest{} }
func (m *ResetSubjectPasswordRequest) String() string            { return proto.CompactTextString(m) }
func (*ResetSubjectPasswordRequest) ProtoMessage()               {}
func (*ResetSubjectPasswordRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *ResetSubjectPasswordRequest) GetContext() *Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *ResetSubjectPasswordRequest) GetSubjectId() string {
	if m != nil {
		return m.SubjectId
	}
	return ""
}

func (m *ResetSubjectPasswordRequest) GetNewPassword() string {
	if m != nil {
		return m.NewPassword
	}
	return ""
}

type SearchSubjectRequest struct {
	Context          *Context                `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
	Query            *Query                  `protobuf:"bytes,2,opt,name=query" json:"query,omitempty"`
	Filters          []*SingleValueAttribute `protobuf:"bytes,3,rep,name=filters" json:"filters,omitempty"`
	OrderBy          string                  `protobuf:"bytes,4,opt,name=order_by,json=orderBy" json:"order_by,omitempty"`
	OrderByDirection OrderByDirection        `protobuf:"varint,5,opt,name=order_by_direction,json=orderByDirection,enum=iam.v1.OrderByDirection" json:"order_by_direction,omitempty"`
	Cursor           string                  `protobuf:"bytes,6,opt,name=cursor" json:"cursor,omitempty"`
	PageSize         int64                   `protobuf:"varint,7,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
}

func (m *SearchSubjectRequest) Reset()                    { *m = SearchSubjectRequest{} }
func (m *SearchSubjectRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchSubjectRequest) ProtoMessage()               {}
func (*SearchSubjectRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *SearchSubjectRequest) GetContext() *Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *SearchSubjectRequest) GetQuery() *Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *SearchSubjectRequest) GetFilters() []*SingleValueAttribute {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *SearchSubjectRequest) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

func (m *SearchSubjectRequest) GetOrderByDirection() OrderByDirection {
	if m != nil {
		return m.OrderByDirection
	}
	return OrderByDirection_ASCENDING
}

func (m *SearchSubjectRequest) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

func (m *SearchSubjectRequest) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type GetSubjectContextRequest struct {
	SubjectId string `protobuf:"bytes,1,opt,name=subject_id,json=subjectId" json:"subject_id,omitempty"`
}

func (m *GetSubjectContextRequest) Reset()                    { *m = GetSubjectContextRequest{} }
func (m *GetSubjectContextRequest) String() string            { return proto.CompactTextString(m) }
func (*GetSubjectContextRequest) ProtoMessage()               {}
func (*GetSubjectContextRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *GetSubjectContextRequest) GetSubjectId() string {
	if m != nil {
		return m.SubjectId
	}
	return ""
}

type MutateAttributesRequest struct {
	Context   *Context    `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
	SubjectId string      `protobuf:"bytes,2,opt,name=subject_id,json=subjectId" json:"subject_id,omitempty"`
	Mutations []*Mutation `protobuf:"bytes,3,rep,name=mutations" json:"mutations,omitempty"`
}

func (m *MutateAttributesRequest) Reset()                    { *m = MutateAttributesRequest{} }
func (m *MutateAttributesRequest) String() string            { return proto.CompactTextString(m) }
func (*MutateAttributesRequest) ProtoMessage()               {}
func (*MutateAttributesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *MutateAttributesRequest) GetContext() *Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *MutateAttributesRequest) GetSubjectId() string {
	if m != nil {
		return m.SubjectId
	}
	return ""
}

func (m *MutateAttributesRequest) GetMutations() []*Mutation {
	if m != nil {
		return m.Mutations
	}
	return nil
}

type ChangeSubjectEmailRequest struct {
	Context   *Context `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
	SubjectId string   `protobuf:"bytes,2,opt,name=subject_id,json=subjectId" json:"subject_id,omitempty"`
	NewEmail  string   `protobuf:"bytes,3,opt,name=new_email,json=newEmail" json:"new_email,omitempty"`
}

func (m *ChangeSubjectEmailRequest) Reset()                    { *m = ChangeSubjectEmailRequest{} }
func (m *ChangeSubjectEmailRequest) String() string            { return proto.CompactTextString(m) }
func (*ChangeSubjectEmailRequest) ProtoMessage()               {}
func (*ChangeSubjectEmailRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *ChangeSubjectEmailRequest) GetContext() *Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *ChangeSubjectEmailRequest) GetSubjectId() string {
	if m != nil {
		return m.SubjectId
	}
	return ""
}

func (m *ChangeSubjectEmailRequest) GetNewEmail() string {
	if m != nil {
		return m.NewEmail
	}
	return ""
}

// *******************
// Responses
// *******************
type RegisterSubjectResponse struct {
	SubjectId string `protobuf:"bytes,1,opt,name=subject_id,json=subjectId" json:"subject_id,omitempty"`
}

func (m *RegisterSubjectResponse) Reset()                    { *m = RegisterSubjectResponse{} }
func (m *RegisterSubjectResponse) String() string            { return proto.CompactTextString(m) }
func (*RegisterSubjectResponse) ProtoMessage()               {}
func (*RegisterSubjectResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *RegisterSubjectResponse) GetSubjectId() string {
	if m != nil {
		return m.SubjectId
	}
	return ""
}

type GetSubjectsResponse struct {
	Subjects []*SubjectResult `protobuf:"bytes,1,rep,name=subjects" json:"subjects,omitempty"`
}

func (m *GetSubjectsResponse) Reset()                    { *m = GetSubjectsResponse{} }
func (m *GetSubjectsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetSubjectsResponse) ProtoMessage()               {}
func (*GetSubjectsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *GetSubjectsResponse) GetSubjects() []*SubjectResult {
	if m != nil {
		return m.Subjects
	}
	return nil
}

type SearchSubjectResponse struct {
	Result     []*SubjectResult `protobuf:"bytes,1,rep,name=result" json:"result,omitempty"`
	NextCursor string           `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor" json:"next_cursor,omitempty"`
	HasMore    bool             `protobuf:"varint,3,opt,name=has_more,json=hasMore" json:"has_more,omitempty"`
}

func (m *SearchSubjectResponse) Reset()                    { *m = SearchSubjectResponse{} }
func (m *SearchSubjectResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchSubjectResponse) ProtoMessage()               {}
func (*SearchSubjectResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *SearchSubjectResponse) GetResult() []*SubjectResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *SearchSubjectResponse) GetNextCursor() string {
	if m != nil {
		return m.NextCursor
	}
	return ""
}

func (m *SearchSubjectResponse) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

type GetSubjectContextResponse struct {
	Context *Context `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
}

func (m *GetSubjectContextResponse) Reset()                    { *m = GetSubjectContextResponse{} }
func (m *GetSubjectContextResponse) String() string            { return proto.CompactTextString(m) }
func (*GetSubjectContextResponse) ProtoMessage()               {}
func (*GetSubjectContextResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *GetSubjectContextResponse) GetContext() *Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func init() {
	proto.RegisterType((*Subject)(nil), "iam.v1.Subject")
	proto.RegisterType((*SubjectResult)(nil), "iam.v1.SubjectResult")
	proto.RegisterType((*SingleValueAttribute)(nil), "iam.v1.SingleValueAttribute")
	proto.RegisterType((*MultiValueAttribute)(nil), "iam.v1.MultiValueAttribute")
	proto.RegisterType((*Query)(nil), "iam.v1.Query")
	proto.RegisterType((*Mutation)(nil), "iam.v1.Mutation")
	proto.RegisterType((*NamespacedContext)(nil), "iam.v1.NamespacedContext")
	proto.RegisterType((*TypedContext)(nil), "iam.v1.TypedContext")
	proto.RegisterType((*Context)(nil), "iam.v1.Context")
	proto.RegisterType((*RegisterSubjectRequest)(nil), "iam.v1.RegisterSubjectRequest")
	proto.RegisterType((*GetSubjectsRequest)(nil), "iam.v1.GetSubjectsRequest")
	proto.RegisterType((*GetSubjectsByEmailRequest)(nil), "iam.v1.GetSubjectsByEmailRequest")
	proto.RegisterType((*AuthenticateSubjectRequest)(nil), "iam.v1.AuthenticateSubjectRequest")
	proto.RegisterType((*DeleteSubjectRequest)(nil), "iam.v1.DeleteSubjectRequest")
	proto.RegisterType((*ResetSubjectPasswordRequest)(nil), "iam.v1.ResetSubjectPasswordRequest")
	proto.RegisterType((*SearchSubjectRequest)(nil), "iam.v1.SearchSubjectRequest")
	proto.RegisterType((*GetSubjectContextRequest)(nil), "iam.v1.GetSubjectContextRequest")
	proto.RegisterType((*MutateAttributesRequest)(nil), "iam.v1.MutateAttributesRequest")
	proto.RegisterType((*ChangeSubjectEmailRequest)(nil), "iam.v1.ChangeSubjectEmailRequest")
	proto.RegisterType((*RegisterSubjectResponse)(nil), "iam.v1.RegisterSubjectResponse")
	proto.RegisterType((*GetSubjectsResponse)(nil), "iam.v1.GetSubjectsResponse")
	proto.RegisterType((*SearchSubjectResponse)(nil), "iam.v1.SearchSubjectResponse")
	proto.RegisterType((*GetSubjectContextResponse)(nil), "iam.v1.GetSubjectContextResponse")
	proto.RegisterEnum("iam.v1.OrderByDirection", OrderByDirection_name, OrderByDirection_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for IAM service

type IAMClient interface {
	RegisterSubject(ctx context.Context, in *RegisterSubjectRequest, opts ...grpc.CallOption) (*RegisterSubjectResponse, error)
	AuthenticateSubject(ctx context.Context, in *AuthenticateSubjectRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	GetSubjects(ctx context.Context, in *GetSubjectsRequest, opts ...grpc.CallOption) (*GetSubjectsResponse, error)
	GetSubjectsByEmail(ctx context.Context, in *GetSubjectsByEmailRequest, opts ...grpc.CallOption) (*GetSubjectsResponse, error)
	MutateAttributes(ctx context.Context, in *MutateAttributesRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	ResetSubjectPassword(ctx context.Context, in *ResetSubjectPasswordRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	ChangeSubjectEmail(ctx context.Context, in *ChangeSubjectEmailRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	DeleteSubject(ctx context.Context, in *DeleteSubjectRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	SearchSubject(ctx context.Context, in *SearchSubjectRequest, opts ...grpc.CallOption) (*SearchSubjectResponse, error)
	GetSubjectContext(ctx context.Context, in *GetSubjectContextRequest, opts ...grpc.CallOption) (*GetSubjectContextResponse, error)
}

type iAMClient struct {
	cc *grpc.ClientConn
}

func NewIAMClient(cc *grpc.ClientConn) IAMClient {
	return &iAMClient{cc}
}

func (c *iAMClient) RegisterSubject(ctx context.Context, in *RegisterSubjectRequest, opts ...grpc.CallOption) (*RegisterSubjectResponse, error) {
	out := new(RegisterSubjectResponse)
	err := grpc.Invoke(ctx, "/iam.v1.IAM/RegisterSubject", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAMClient) AuthenticateSubject(ctx context.Context, in *AuthenticateSubjectRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/iam.v1.IAM/AuthenticateSubject", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAMClient) GetSubjects(ctx context.Context, in *GetSubjectsRequest, opts ...grpc.CallOption) (*GetSubjectsResponse, error) {
	out := new(GetSubjectsResponse)
	err := grpc.Invoke(ctx, "/iam.v1.IAM/GetSubjects", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAMClient) GetSubjectsByEmail(ctx context.Context, in *GetSubjectsByEmailRequest, opts ...grpc.CallOption) (*GetSubjectsResponse, error) {
	out := new(GetSubjectsResponse)
	err := grpc.Invoke(ctx, "/iam.v1.IAM/GetSubjectsByEmail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAMClient) MutateAttributes(ctx context.Context, in *MutateAttributesRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/iam.v1.IAM/MutateAttributes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAMClient) ResetSubjectPassword(ctx context.Context, in *ResetSubjectPasswordRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/iam.v1.IAM/ResetSubjectPassword", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAMClient) ChangeSubjectEmail(ctx context.Context, in *ChangeSubjectEmailRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/iam.v1.IAM/ChangeSubjectEmail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAMClient) DeleteSubject(ctx context.Context, in *DeleteSubjectRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/iam.v1.IAM/DeleteSubject", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAMClient) SearchSubject(ctx context.Context, in *SearchSubjectRequest, opts ...grpc.CallOption) (*SearchSubjectResponse, error) {
	out := new(SearchSubjectResponse)
	err := grpc.Invoke(ctx, "/iam.v1.IAM/SearchSubject", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAMClient) GetSubjectContext(ctx context.Context, in *GetSubjectContextRequest, opts ...grpc.CallOption) (*GetSubjectContextResponse, error) {
	out := new(GetSubjectContextResponse)
	err := grpc.Invoke(ctx, "/iam.v1.IAM/GetSubjectContext", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for IAM service

type IAMServer interface {
	RegisterSubject(context.Context, *RegisterSubjectRequest) (*RegisterSubjectResponse, error)
	AuthenticateSubject(context.Context, *AuthenticateSubjectRequest) (*google_protobuf.Empty, error)
	GetSubjects(context.Context, *GetSubjectsRequest) (*GetSubjectsResponse, error)
	GetSubjectsByEmail(context.Context, *GetSubjectsByEmailRequest) (*GetSubjectsResponse, error)
	MutateAttributes(context.Context, *MutateAttributesRequest) (*google_protobuf.Empty, error)
	ResetSubjectPassword(context.Context, *ResetSubjectPasswordRequest) (*google_protobuf.Empty, error)
	ChangeSubjectEmail(context.Context, *ChangeSubjectEmailRequest) (*google_protobuf.Empty, error)
	DeleteSubject(context.Context, *DeleteSubjectRequest) (*google_protobuf.Empty, error)
	SearchSubject(context.Context, *SearchSubjectRequest) (*SearchSubjectResponse, error)
	GetSubjectContext(context.Context, *GetSubjectContextRequest) (*GetSubjectContextResponse, error)
}

func RegisterIAMServer(s *grpc.Server, srv IAMServer) {
	s.RegisterService(&_IAM_serviceDesc, srv)
}

func _IAM_RegisterSubject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterSubjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAMServer).RegisterSubject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iam.v1.IAM/RegisterSubject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAMServer).RegisterSubject(ctx, req.(*RegisterSubjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAM_AuthenticateSubject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthenticateSubjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAMServer).AuthenticateSubject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iam.v1.IAM/AuthenticateSubject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAMServer).AuthenticateSubject(ctx, req.(*AuthenticateSubjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAM_GetSubjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSubjectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAMServer).GetSubjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iam.v1.IAM/GetSubjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAMServer).GetSubjects(ctx, req.(*GetSubjectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAM_GetSubjectsByEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSubjectsByEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAMServer).GetSubjectsByEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iam.v1.IAM/GetSubjectsByEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAMServer).GetSubjectsByEmail(ctx, req.(*GetSubjectsByEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAM_MutateAttributes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MutateAttributesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAMServer).MutateAttributes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iam.v1.IAM/MutateAttributes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAMServer).MutateAttributes(ctx, req.(*MutateAttributesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAM_ResetSubjectPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetSubjectPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAMServer).ResetSubjectPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iam.v1.IAM/ResetSubjectPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAMServer).ResetSubjectPassword(ctx, req.(*ResetSubjectPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAM_ChangeSubjectEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeSubjectEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAMServer).ChangeSubjectEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iam.v1.IAM/ChangeSubjectEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAMServer).ChangeSubjectEmail(ctx, req.(*ChangeSubjectEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAM_DeleteSubject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSubjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAMServer).DeleteSubject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iam.v1.IAM/DeleteSubject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAMServer).DeleteSubject(ctx, req.(*DeleteSubjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAM_SearchSubject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchSubjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAMServer).SearchSubject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iam.v1.IAM/SearchSubject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAMServer).SearchSubject(ctx, req.(*SearchSubjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAM_GetSubjectContext_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSubjectContextRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAMServer).GetSubjectContext(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iam.v1.IAM/GetSubjectContext",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAMServer).GetSubjectContext(ctx, req.(*GetSubjectContextRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _IAM_serviceDesc = grpc.ServiceDesc{
	ServiceName: "iam.v1.IAM",
	HandlerType: (*IAMServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterSubject",
			Handler:    _IAM_RegisterSubject_Handler,
		},
		{
			MethodName: "AuthenticateSubject",
			Handler:    _IAM_AuthenticateSubject_Handler,
		},
		{
			MethodName: "GetSubjects",
			Handler:    _IAM_GetSubjects_Handler,
		},
		{
			MethodName: "GetSubjectsByEmail",
			Handler:    _IAM_GetSubjectsByEmail_Handler,
		},
		{
			MethodName: "MutateAttributes",
			Handler:    _IAM_MutateAttributes_Handler,
		},
		{
			MethodName: "ResetSubjectPassword",
			Handler:    _IAM_ResetSubjectPassword_Handler,
		},
		{
			MethodName: "ChangeSubjectEmail",
			Handler:    _IAM_ChangeSubjectEmail_Handler,
		},
		{
			MethodName: "DeleteSubject",
			Handler:    _IAM_DeleteSubject_Handler,
		},
		{
			MethodName: "SearchSubject",
			Handler:    _IAM_SearchSubject_Handler,
		},
		{
			MethodName: "GetSubjectContext",
			Handler:    _IAM_GetSubjectContext_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1190 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x56, 0xcd, 0x72, 0x1b, 0x45,
	0x10, 0x96, 0x2c, 0x5b, 0xd2, 0xb6, 0x22, 0x47, 0x19, 0x2b, 0xce, 0x5a, 0x4a, 0xb0, 0x3d, 0x29,
	0xaa, 0x0c, 0x05, 0x0a, 0x36, 0x54, 0x20, 0xa4, 0x0a, 0xca, 0x7f, 0xb1, 0x5c, 0xc1, 0x0e, 0x59,
	0x99, 0x1c, 0x38, 0xa0, 0xac, 0xb5, 0x1d, 0x79, 0x89, 0xb4, 0xbb, 0xd9, 0x99, 0xb5, 0xa3, 0x5c,
	0xa8, 0xe2, 0xc8, 0x95, 0x37, 0xe0, 0x11, 0x38, 0x70, 0xe6, 0x2d, 0x78, 0x1d, 0x6a, 0x66, 0x67,
	0x56, 0xff, 0x72, 0xca, 0x49, 0xe5, 0xb6, 0x33, 0xfd, 0x4d, 0x4f, 0xf7, 0x37, 0xdd, 0x5f, 0x2f,
	0x18, 0x76, 0xe0, 0xd6, 0x82, 0xd0, 0xe7, 0x3e, 0xc9, 0xba, 0x76, 0xb7, 0x76, 0xbe, 0x59, 0xa9,
	0xb6, 0x7d, 0xbf, 0xdd, 0xc1, 0x7b, 0x72, 0xf7, 0x34, 0x7a, 0x71, 0x0f, 0xbb, 0x01, 0xef, 0xc5,
	0xa0, 0xca, 0xea, 0xa8, 0x91, 0xbb, 0x5d, 0x64, 0xdc, 0xee, 0x06, 0x31, 0x80, 0xfe, 0x35, 0x07,
	0xb9, 0x46, 0x74, 0xfa, 0x2b, 0xb6, 0x38, 0xb9, 0x03, 0xc0, 0xe2, 0xcf, 0xa6, 0xeb, 0x98, 0xe9,
	0xb5, 0xf4, 0x86, 0x61, 0x19, 0x6a, 0xe7, 0xd0, 0x21, 0x65, 0x58, 0xc0, 0xae, 0xed, 0x76, 0xcc,
	0x39, 0x69, 0x89, 0x17, 0xe4, 0x21, 0x80, 0xcd, 0x79, 0xe8, 0x9e, 0x46, 0x1c, 0x99, 0x39, 0xbf,
	0x96, 0xd9, 0x28, 0x6c, 0x55, 0x6b, 0x71, 0x6c, 0xb5, 0xa3, 0xa8, 0xc3, 0xdd, 0x67, 0x76, 0x27,
	0xc2, 0x6d, 0x8d, 0xb1, 0x06, 0xe0, 0xe4, 0x2b, 0xc8, 0xb5, 0x42, 0xb4, 0x39, 0x3a, 0xe6, 0xc2,
	0x5a, 0x7a, 0xa3, 0xb0, 0x55, 0xa9, 0xc5, 0x01, 0xd7, 0x74, 0xc0, 0xb5, 0x13, 0x1d, 0xb0, 0xa5,
	0xa1, 0xe2, 0x54, 0x14, 0x38, 0xf2, 0x54, 0xf6, 0xf2, 0x53, 0x0a, 0x4a, 0x1e, 0x00, 0x74, 0x6c,
	0xc6, 0x9b, 0x1d, 0xbf, 0xed, 0x7a, 0x66, 0xee, 0xd2, 0x83, 0x86, 0x40, 0xff, 0x20, 0xc0, 0xf4,
	0x5b, 0x28, 0x2a, 0x8e, 0x2c, 0x64, 0x51, 0x87, 0x93, 0x4f, 0x20, 0xa7, 0x78, 0x91, 0x34, 0x15,
	0xb6, 0xae, 0xeb, 0x8c, 0x35, 0x4e, 0xdb, 0xe9, 0x77, 0x50, 0x6e, 0xb8, 0x5e, 0xbb, 0x83, 0xc3,
	0x34, 0x90, 0x12, 0x64, 0x5e, 0x62, 0x4f, 0xb1, 0x2c, 0x3e, 0x05, 0xbf, 0xe7, 0x02, 0xa3, 0xf9,
	0x95, 0x0b, 0xfa, 0x3d, 0x2c, 0x4d, 0x60, 0x71, 0xc2, 0xf1, 0x65, 0xc8, 0xca, 0x13, 0xcc, 0x9c,
	0x5b, 0xcb, 0x6c, 0x18, 0x96, 0x5a, 0xd1, 0x27, 0xb0, 0xf0, 0x34, 0xc2, 0xb0, 0x47, 0x56, 0xa1,
	0xc0, 0xd0, 0x0e, 0x5b, 0x67, 0x4d, 0x8e, 0x61, 0x57, 0x1d, 0x85, 0x78, 0xeb, 0x04, 0xc3, 0x2e,
	0xf9, 0x18, 0x16, 0x93, 0xb7, 0x69, 0xbe, 0xc4, 0x9e, 0xf6, 0x54, 0x4c, 0x76, 0x1f, 0x63, 0x8f,
	0xd1, 0xff, 0xd2, 0x90, 0x3f, 0x8a, 0xb8, 0xcd, 0x5d, 0xdf, 0x23, 0x5f, 0x40, 0xc6, 0x76, 0x1c,
	0xc5, 0xc2, 0xed, 0x84, 0x85, 0x09, 0x19, 0xd7, 0x53, 0x96, 0x80, 0x92, 0xaf, 0x21, 0x17, 0x62,
	0xd0, 0xb1, 0x5b, 0x71, 0xa2, 0xb3, 0xab, 0xa5, 0x9e, 0xb2, 0x34, 0x9a, 0xdc, 0x87, 0x6c, 0x88,
	0x5d, 0xff, 0x1c, 0xcd, 0xcc, 0x5b, 0xdd, 0xa6, 0xd0, 0xa4, 0x0a, 0x79, 0x27, 0xf4, 0x03, 0x91,
	0x91, 0x39, 0x2f, 0x92, 0x16, 0x4e, 0xc5, 0xce, 0x63, 0xec, 0xed, 0x14, 0xc0, 0xf0, 0x03, 0x0c,
	0x65, 0x32, 0x74, 0x1f, 0x6e, 0x1c, 0xdb, 0x5d, 0x64, 0x81, 0xdd, 0x42, 0x67, 0xd7, 0xf7, 0x38,
	0xbe, 0xe6, 0xe4, 0x36, 0x18, 0x9e, 0xde, 0xd4, 0x4d, 0x91, 0x6c, 0x10, 0x02, 0xf3, 0xbc, 0x17,
	0xe8, 0x37, 0x93, 0xdf, 0x94, 0xc2, 0xb5, 0x93, 0x5e, 0xd0, 0xf7, 0xa0, 0x31, 0xe9, 0x01, 0xcc,
	0x6f, 0x90, 0xd3, 0xe6, 0x87, 0x00, 0x89, 0x3f, 0xcd, 0xe4, 0x8a, 0xce, 0x6d, 0x2c, 0x9e, 0x7a,
	0xca, 0x1a, 0x80, 0x93, 0xcf, 0x60, 0x41, 0xf8, 0x73, 0x14, 0x97, 0x65, 0x7d, 0x6e, 0x30, 0x80,
	0x7a, 0xca, 0x8a, 0x41, 0x3b, 0x06, 0xe4, 0x5a, 0xf1, 0x1e, 0xfd, 0x3b, 0x0d, 0xcb, 0x16, 0xb6,
	0x5d, 0xc6, 0x31, 0x4c, 0x8a, 0xfb, 0x55, 0x84, 0x4c, 0x56, 0xb7, 0x42, 0x8d, 0x56, 0xb7, 0x72,
	0x68, 0x69, 0xfb, 0x14, 0x4d, 0xa8, 0x40, 0x3e, 0xb0, 0x19, 0xbb, 0xf0, 0x43, 0x47, 0xbe, 0x95,
	0x61, 0x25, 0xeb, 0x77, 0xd2, 0x0b, 0xfa, 0x1c, 0xc8, 0x01, 0x72, 0x15, 0x2e, 0xbb, 0x42, 0xbc,
	0xa2, 0x07, 0x12, 0x89, 0xd3, 0xf5, 0x0d, 0x89, 0xc6, 0x31, 0xfa, 0x0b, 0xac, 0x0c, 0xdc, 0xb0,
	0xd3, 0xdb, 0x17, 0x09, 0x5d, 0xe1, 0xa2, 0x65, 0xc8, 0x4a, 0x2e, 0x92, 0x6e, 0x8c, 0x57, 0xb4,
	0x07, 0x95, 0xed, 0x88, 0x9f, 0xa1, 0xc7, 0xdd, 0x96, 0xcd, 0xf1, 0x03, 0x32, 0x4f, 0x9f, 0x43,
	0x79, 0x0f, 0x3b, 0xf8, 0x2e, 0x97, 0x0e, 0x4f, 0x88, 0xb9, 0x91, 0x09, 0x41, 0xff, 0x48, 0x43,
	0xd5, 0x42, 0x96, 0xf0, 0xf7, 0xa3, 0xba, 0xfa, 0xbd, 0xdf, 0x44, 0xd6, 0xe1, 0x9a, 0x87, 0x17,
	0xcd, 0x91, 0x5c, 0x0b, 0x1e, 0x5e, 0xe8, 0x3b, 0xe9, 0x3f, 0x73, 0x50, 0x6e, 0x48, 0x71, 0xbb,
	0x7a, 0xbe, 0x77, 0x61, 0xe1, 0x95, 0xd0, 0x4e, 0xd5, 0x5d, 0x45, 0x0d, 0x94, 0x82, 0x6a, 0xc5,
	0x36, 0x72, 0x1f, 0x72, 0x2f, 0xdc, 0x0e, 0xc7, 0x90, 0x99, 0x19, 0x59, 0xce, 0x33, 0x85, 0xc9,
	0xd2, 0x60, 0xb2, 0x02, 0x79, 0x3f, 0x74, 0x30, 0x6c, 0x9e, 0x2a, 0x5d, 0xb2, 0x72, 0x72, 0xbd,
	0xd3, 0x23, 0x8f, 0x80, 0x68, 0x53, 0xd3, 0x71, 0x43, 0x6c, 0x09, 0x79, 0x92, 0x23, 0x72, 0x71,
	0xcb, 0xd4, 0xde, 0x9f, 0xc4, 0xe0, 0x3d, 0x6d, 0xb7, 0x4a, 0xfe, 0xc8, 0x8e, 0xa8, 0xc2, 0x56,
	0x14, 0x32, 0x3f, 0x94, 0x83, 0xd2, 0xb0, 0xd4, 0x8a, 0x54, 0xc1, 0x08, 0xec, 0x36, 0x36, 0x99,
	0xfb, 0x06, 0xe5, 0x28, 0xcc, 0x88, 0x3a, 0x69, 0x63, 0xc3, 0x7d, 0x83, 0xf4, 0x01, 0x98, 0xfd,
	0x16, 0xd0, 0x94, 0x28, 0xee, 0x66, 0xff, 0x22, 0xd0, 0x3f, 0xd3, 0x70, 0x4b, 0x8e, 0x86, 0x7e,
	0xbe, 0xec, 0xfd, 0x3f, 0x7e, 0x0d, 0x8c, 0xae, 0x9a, 0x3f, 0x9a, 0xf2, 0x52, 0x5f, 0x41, 0x62,
	0x83, 0xd5, 0x87, 0xd0, 0xdf, 0xd3, 0xb0, 0xb2, 0x7b, 0x66, 0x7b, 0x6d, 0x5d, 0xf9, 0x57, 0x6d,
	0xea, 0x4b, 0xe2, 0xaa, 0x82, 0x21, 0x8a, 0x32, 0x6e, 0x4b, 0xd5, 0x7d, 0x1e, 0x5e, 0xc8, 0xdb,
	0xe8, 0x37, 0x70, 0x6b, 0x4c, 0x6e, 0x59, 0xe0, 0x7b, 0x0c, 0x2f, 0x23, 0xb5, 0x0e, 0x4b, 0x43,
	0xa2, 0xa7, 0x4e, 0x6d, 0x42, 0x5e, 0x61, 0x98, 0x99, 0x96, 0x24, 0xdc, 0x1c, 0xfd, 0x09, 0x91,
	0x3f, 0x2b, 0x56, 0x02, 0x13, 0x44, 0xdc, 0x1c, 0x69, 0x09, 0xe5, 0xec, 0x73, 0x31, 0x5b, 0x05,
	0x7a, 0xb6, 0x2b, 0x05, 0x12, 0x32, 0xea, 0xe1, 0x6b, 0xde, 0x54, 0xc5, 0x15, 0x33, 0x01, 0x62,
	0x6b, 0x37, 0x2e, 0xb0, 0x15, 0xc8, 0x9f, 0xd9, 0xac, 0xd9, 0xf5, 0xc3, 0x78, 0x5a, 0xe7, 0xad,
	0xdc, 0x99, 0xcd, 0x8e, 0xfc, 0x10, 0xe9, 0xa3, 0x41, 0x85, 0x4d, 0xca, 0x4b, 0xc5, 0xf1, 0xf6,
	0x8f, 0xf1, 0xe9, 0x26, 0x94, 0x46, 0x3b, 0x80, 0x14, 0xc1, 0xd8, 0x6e, 0xec, 0xee, 0x1f, 0xef,
	0x1d, 0x1e, 0x1f, 0x94, 0x52, 0x64, 0x11, 0x60, 0x6f, 0x3f, 0x59, 0xa7, 0xb7, 0xfe, 0xcd, 0x42,
	0xe6, 0x70, 0xfb, 0x88, 0x9c, 0xc0, 0xf5, 0x91, 0xb7, 0x20, 0x1f, 0xe9, 0x7b, 0x26, 0xcf, 0xc4,
	0xca, 0xea, 0x54, 0x7b, 0x1c, 0x39, 0x4d, 0x91, 0x06, 0x2c, 0x4d, 0x90, 0x76, 0x42, 0xf5, 0xc9,
	0xe9, 0xba, 0x5f, 0x59, 0x1e, 0xfb, 0x0f, 0xdd, 0x17, 0x3f, 0xf1, 0x34, 0x45, 0xea, 0x50, 0x18,
	0x78, 0x7c, 0x52, 0xd1, 0xce, 0xc6, 0xc7, 0x60, 0xa5, 0x3a, 0xd1, 0x96, 0x84, 0xf7, 0x6c, 0x68,
	0x76, 0xaa, 0xc9, 0x46, 0xd6, 0x27, 0x1c, 0x1a, 0x9e, 0x7a, 0x97, 0xf9, 0x3d, 0x82, 0xd2, 0x68,
	0xcb, 0x93, 0xd5, 0xa1, 0x76, 0x1c, 0x17, 0x83, 0x19, 0x09, 0xff, 0x04, 0xe5, 0x49, 0x23, 0x84,
	0xdc, 0xed, 0x3f, 0xc0, 0xd4, 0x01, 0x33, 0xc3, 0xed, 0x53, 0x20, 0xe3, 0x12, 0xd0, 0xcf, 0x7e,
	0xaa, 0x3c, 0xcc, 0x70, 0x79, 0x00, 0xc5, 0xa1, 0x79, 0x4a, 0x12, 0xdd, 0x9f, 0x34, 0x66, 0x67,
	0x38, 0x3a, 0x86, 0xe2, 0x50, 0x57, 0xf6, 0x1d, 0x4d, 0x9a, 0x5f, 0x95, 0x3b, 0x53, 0xac, 0xc9,
	0x8b, 0xfc, 0x0c, 0x37, 0xc6, 0x3a, 0x8c, 0xac, 0x8d, 0xbf, 0xe2, 0xb0, 0xb6, 0x57, 0xd6, 0x67,
	0x20, 0xb4, 0xef, 0xd3, 0xac, 0x8c, 0xfe, 0xcb, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0x6e, 0x33,
	0x14, 0x5b, 0x89, 0x0e, 0x00, 0x00,
}
