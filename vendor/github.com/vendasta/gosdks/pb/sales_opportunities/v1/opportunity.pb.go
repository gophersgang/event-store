// Code generated by protoc-gen-go.
// source: opportunity.proto
// DO NOT EDIT!

/*
Package salesopportunities_v1 is a generated protocol buffer package.

It is generated from these files:
	opportunity.proto

It has these top-level messages:
	RevenueComponent
	Revenue
	Opportunity
	CreateOpportunityRequest
	GetOpportunityRequest
	ListOpportunitiesRequest
	GetOpportunityCountByAccountGroupsRequest
	UpdateOpportunityRequest
	CreateOpportunityResponse
	GetOpportunityResponse
	ListOpportunitiesResponse
	OpportunityCount
	GetOpportunityCountByAccountGroupsResponse
	UpdateOpportunityResponse
*/
package salesopportunities_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RevenuePeriod int32

const (
	RevenuePeriod_ONETIME  RevenuePeriod = 0
	RevenuePeriod_DAILY    RevenuePeriod = 1
	RevenuePeriod_WEEKLY   RevenuePeriod = 2
	RevenuePeriod_BIWEEKLY RevenuePeriod = 3
	RevenuePeriod_MONTHLY  RevenuePeriod = 4
	RevenuePeriod_YEARLY   RevenuePeriod = 5
)

var RevenuePeriod_name = map[int32]string{
	0: "ONETIME",
	1: "DAILY",
	2: "WEEKLY",
	3: "BIWEEKLY",
	4: "MONTHLY",
	5: "YEARLY",
}
var RevenuePeriod_value = map[string]int32{
	"ONETIME":  0,
	"DAILY":    1,
	"WEEKLY":   2,
	"BIWEEKLY": 3,
	"MONTHLY":  4,
	"YEARLY":   5,
}

func (x RevenuePeriod) String() string {
	return proto.EnumName(RevenuePeriod_name, int32(x))
}
func (RevenuePeriod) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Currency int32

const (
	Currency_USD Currency = 0
	Currency_CDN Currency = 1
	Currency_EUR Currency = 2
	Currency_AUD Currency = 3
	Currency_GBP Currency = 4
	Currency_NZD Currency = 5
)

var Currency_name = map[int32]string{
	0: "USD",
	1: "CDN",
	2: "EUR",
	3: "AUD",
	4: "GBP",
	5: "NZD",
}
var Currency_value = map[string]int32{
	"USD": 0,
	"CDN": 1,
	"EUR": 2,
	"AUD": 3,
	"GBP": 4,
	"NZD": 5,
}

func (x Currency) String() string {
	return proto.EnumName(Currency_name, int32(x))
}
func (Currency) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type RevenueComponent struct {
	Value  float64       `protobuf:"fixed64,1,opt,name=value" json:"value,omitempty"`
	Period RevenuePeriod `protobuf:"varint,2,opt,name=period,enum=salesopportunities.v1.RevenuePeriod" json:"period,omitempty"`
}

func (m *RevenueComponent) Reset()                    { *m = RevenueComponent{} }
func (m *RevenueComponent) String() string            { return proto.CompactTextString(m) }
func (*RevenueComponent) ProtoMessage()               {}
func (*RevenueComponent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RevenueComponent) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *RevenueComponent) GetPeriod() RevenuePeriod {
	if m != nil {
		return m.Period
	}
	return RevenuePeriod_ONETIME
}

type Revenue struct {
	Currency          Currency            `protobuf:"varint,1,opt,name=currency,enum=salesopportunities.v1.Currency" json:"currency,omitempty"`
	RevenueComponents []*RevenueComponent `protobuf:"bytes,2,rep,name=revenue_components,json=revenueComponents" json:"revenue_components,omitempty"`
}

func (m *Revenue) Reset()                    { *m = Revenue{} }
func (m *Revenue) String() string            { return proto.CompactTextString(m) }
func (*Revenue) ProtoMessage()               {}
func (*Revenue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Revenue) GetCurrency() Currency {
	if m != nil {
		return m.Currency
	}
	return Currency_USD
}

func (m *Revenue) GetRevenueComponents() []*RevenueComponent {
	if m != nil {
		return m.RevenueComponents
	}
	return nil
}

type Opportunity struct {
	OpportunityId           string                     `protobuf:"bytes,1,opt,name=opportunity_id,json=opportunityId" json:"opportunity_id,omitempty"`
	AccountGroupId          string                     `protobuf:"bytes,2,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	SalesPersonId           string                     `protobuf:"bytes,3,opt,name=sales_person_id,json=salesPersonId" json:"sales_person_id,omitempty"`
	Name                    string                     `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Revenue                 *Revenue                   `protobuf:"bytes,6,opt,name=revenue" json:"revenue,omitempty"`
	PackageIds              []string                   `protobuf:"bytes,7,rep,name=package_ids,json=packageIds" json:"package_ids,omitempty"`
	ExpectedCloseDate       *google_protobuf.Timestamp `protobuf:"bytes,8,opt,name=expected_close_date,json=expectedCloseDate" json:"expected_close_date,omitempty"`
	Probability             float64                    `protobuf:"fixed64,9,opt,name=probability" json:"probability,omitempty"`
	Notes                   string                     `protobuf:"bytes,10,opt,name=notes" json:"notes,omitempty"`
	Deleted                 *google_protobuf.Timestamp `protobuf:"bytes,11,opt,name=deleted" json:"deleted,omitempty"`
	Created                 *google_protobuf.Timestamp `protobuf:"bytes,12,opt,name=created" json:"created,omitempty"`
	Updated                 *google_protobuf.Timestamp `protobuf:"bytes,13,opt,name=updated" json:"updated,omitempty"`
	ProjectedFirstYearValue float64                    `protobuf:"fixed64,14,opt,name=projected_first_year_value,json=projectedFirstYearValue" json:"projected_first_year_value,omitempty"`
}

func (m *Opportunity) Reset()                    { *m = Opportunity{} }
func (m *Opportunity) String() string            { return proto.CompactTextString(m) }
func (*Opportunity) ProtoMessage()               {}
func (*Opportunity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Opportunity) GetOpportunityId() string {
	if m != nil {
		return m.OpportunityId
	}
	return ""
}

func (m *Opportunity) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *Opportunity) GetSalesPersonId() string {
	if m != nil {
		return m.SalesPersonId
	}
	return ""
}

func (m *Opportunity) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Opportunity) GetRevenue() *Revenue {
	if m != nil {
		return m.Revenue
	}
	return nil
}

func (m *Opportunity) GetPackageIds() []string {
	if m != nil {
		return m.PackageIds
	}
	return nil
}

func (m *Opportunity) GetExpectedCloseDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.ExpectedCloseDate
	}
	return nil
}

func (m *Opportunity) GetProbability() float64 {
	if m != nil {
		return m.Probability
	}
	return 0
}

func (m *Opportunity) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

func (m *Opportunity) GetDeleted() *google_protobuf.Timestamp {
	if m != nil {
		return m.Deleted
	}
	return nil
}

func (m *Opportunity) GetCreated() *google_protobuf.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Opportunity) GetUpdated() *google_protobuf.Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *Opportunity) GetProjectedFirstYearValue() float64 {
	if m != nil {
		return m.ProjectedFirstYearValue
	}
	return 0
}

// *******************
// Requests
// *******************
type CreateOpportunityRequest struct {
	AccountGroupId    string                     `protobuf:"bytes,1,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	SalesPersonId     string                     `protobuf:"bytes,2,opt,name=sales_person_id,json=salesPersonId" json:"sales_person_id,omitempty"`
	Name              string                     `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Revenue           *Revenue                   `protobuf:"bytes,5,opt,name=revenue" json:"revenue,omitempty"`
	PackageIds        []string                   `protobuf:"bytes,6,rep,name=package_ids,json=packageIds" json:"package_ids,omitempty"`
	ExpectedCloseDate *google_protobuf.Timestamp `protobuf:"bytes,7,opt,name=expected_close_date,json=expectedCloseDate" json:"expected_close_date,omitempty"`
	Probability       float64                    `protobuf:"fixed64,8,opt,name=probability" json:"probability,omitempty"`
	Notes             string                     `protobuf:"bytes,9,opt,name=notes" json:"notes,omitempty"`
}

func (m *CreateOpportunityRequest) Reset()                    { *m = CreateOpportunityRequest{} }
func (m *CreateOpportunityRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateOpportunityRequest) ProtoMessage()               {}
func (*CreateOpportunityRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CreateOpportunityRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *CreateOpportunityRequest) GetSalesPersonId() string {
	if m != nil {
		return m.SalesPersonId
	}
	return ""
}

func (m *CreateOpportunityRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateOpportunityRequest) GetRevenue() *Revenue {
	if m != nil {
		return m.Revenue
	}
	return nil
}

func (m *CreateOpportunityRequest) GetPackageIds() []string {
	if m != nil {
		return m.PackageIds
	}
	return nil
}

func (m *CreateOpportunityRequest) GetExpectedCloseDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.ExpectedCloseDate
	}
	return nil
}

func (m *CreateOpportunityRequest) GetProbability() float64 {
	if m != nil {
		return m.Probability
	}
	return 0
}

func (m *CreateOpportunityRequest) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

type GetOpportunityRequest struct {
	OpportunityId  string `protobuf:"bytes,1,opt,name=opportunity_id,json=opportunityId" json:"opportunity_id,omitempty"`
	AccountGroupId string `protobuf:"bytes,2,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
}

func (m *GetOpportunityRequest) Reset()                    { *m = GetOpportunityRequest{} }
func (m *GetOpportunityRequest) String() string            { return proto.CompactTextString(m) }
func (*GetOpportunityRequest) ProtoMessage()               {}
func (*GetOpportunityRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetOpportunityRequest) GetOpportunityId() string {
	if m != nil {
		return m.OpportunityId
	}
	return ""
}

func (m *GetOpportunityRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

type ListOpportunitiesRequest struct {
	AccountGroupId string `protobuf:"bytes,1,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	Cursor         string `protobuf:"bytes,2,opt,name=cursor" json:"cursor,omitempty"`
	PageSize       int64  `protobuf:"varint,3,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
}

func (m *ListOpportunitiesRequest) Reset()                    { *m = ListOpportunitiesRequest{} }
func (m *ListOpportunitiesRequest) String() string            { return proto.CompactTextString(m) }
func (*ListOpportunitiesRequest) ProtoMessage()               {}
func (*ListOpportunitiesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ListOpportunitiesRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *ListOpportunitiesRequest) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

func (m *ListOpportunitiesRequest) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type GetOpportunityCountByAccountGroupsRequest struct {
	AccountGroupIds []string `protobuf:"bytes,1,rep,name=account_group_ids,json=accountGroupIds" json:"account_group_ids,omitempty"`
}

func (m *GetOpportunityCountByAccountGroupsRequest) Reset() {
	*m = GetOpportunityCountByAccountGroupsRequest{}
}
func (m *GetOpportunityCountByAccountGroupsRequest) String() string { return proto.CompactTextString(m) }
func (*GetOpportunityCountByAccountGroupsRequest) ProtoMessage()    {}
func (*GetOpportunityCountByAccountGroupsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{6}
}

func (m *GetOpportunityCountByAccountGroupsRequest) GetAccountGroupIds() []string {
	if m != nil {
		return m.AccountGroupIds
	}
	return nil
}

type UpdateOpportunityRequest struct {
	OpportunityId     string                     `protobuf:"bytes,1,opt,name=opportunity_id,json=opportunityId" json:"opportunity_id,omitempty"`
	AccountGroupId    string                     `protobuf:"bytes,2,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	SalesPersonId     string                     `protobuf:"bytes,3,opt,name=sales_person_id,json=salesPersonId" json:"sales_person_id,omitempty"`
	Name              string                     `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Revenue           *Revenue                   `protobuf:"bytes,5,opt,name=revenue" json:"revenue,omitempty"`
	PackageIds        []string                   `protobuf:"bytes,6,rep,name=package_ids,json=packageIds" json:"package_ids,omitempty"`
	ExpectedCloseDate *google_protobuf.Timestamp `protobuf:"bytes,7,opt,name=expected_close_date,json=expectedCloseDate" json:"expected_close_date,omitempty"`
	Probability       float64                    `protobuf:"fixed64,8,opt,name=probability" json:"probability,omitempty"`
	Notes             string                     `protobuf:"bytes,9,opt,name=notes" json:"notes,omitempty"`
}

func (m *UpdateOpportunityRequest) Reset()                    { *m = UpdateOpportunityRequest{} }
func (m *UpdateOpportunityRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateOpportunityRequest) ProtoMessage()               {}
func (*UpdateOpportunityRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *UpdateOpportunityRequest) GetOpportunityId() string {
	if m != nil {
		return m.OpportunityId
	}
	return ""
}

func (m *UpdateOpportunityRequest) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *UpdateOpportunityRequest) GetSalesPersonId() string {
	if m != nil {
		return m.SalesPersonId
	}
	return ""
}

func (m *UpdateOpportunityRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateOpportunityRequest) GetRevenue() *Revenue {
	if m != nil {
		return m.Revenue
	}
	return nil
}

func (m *UpdateOpportunityRequest) GetPackageIds() []string {
	if m != nil {
		return m.PackageIds
	}
	return nil
}

func (m *UpdateOpportunityRequest) GetExpectedCloseDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.ExpectedCloseDate
	}
	return nil
}

func (m *UpdateOpportunityRequest) GetProbability() float64 {
	if m != nil {
		return m.Probability
	}
	return 0
}

func (m *UpdateOpportunityRequest) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

// *******************
// Responses
// *******************
type CreateOpportunityResponse struct {
	Opportunity *Opportunity `protobuf:"bytes,1,opt,name=opportunity" json:"opportunity,omitempty"`
}

func (m *CreateOpportunityResponse) Reset()                    { *m = CreateOpportunityResponse{} }
func (m *CreateOpportunityResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateOpportunityResponse) ProtoMessage()               {}
func (*CreateOpportunityResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *CreateOpportunityResponse) GetOpportunity() *Opportunity {
	if m != nil {
		return m.Opportunity
	}
	return nil
}

type GetOpportunityResponse struct {
	Opportunity *Opportunity `protobuf:"bytes,1,opt,name=opportunity" json:"opportunity,omitempty"`
}

func (m *GetOpportunityResponse) Reset()                    { *m = GetOpportunityResponse{} }
func (m *GetOpportunityResponse) String() string            { return proto.CompactTextString(m) }
func (*GetOpportunityResponse) ProtoMessage()               {}
func (*GetOpportunityResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *GetOpportunityResponse) GetOpportunity() *Opportunity {
	if m != nil {
		return m.Opportunity
	}
	return nil
}

type ListOpportunitiesResponse struct {
	Results    []*Opportunity `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
	NextCursor string         `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor" json:"next_cursor,omitempty"`
	HasMore    bool           `protobuf:"varint,3,opt,name=has_more,json=hasMore" json:"has_more,omitempty"`
}

func (m *ListOpportunitiesResponse) Reset()                    { *m = ListOpportunitiesResponse{} }
func (m *ListOpportunitiesResponse) String() string            { return proto.CompactTextString(m) }
func (*ListOpportunitiesResponse) ProtoMessage()               {}
func (*ListOpportunitiesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ListOpportunitiesResponse) GetResults() []*Opportunity {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *ListOpportunitiesResponse) GetNextCursor() string {
	if m != nil {
		return m.NextCursor
	}
	return ""
}

func (m *ListOpportunitiesResponse) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

type OpportunityCount struct {
	AccountGroupId string `protobuf:"bytes,1,opt,name=account_group_id,json=accountGroupId" json:"account_group_id,omitempty"`
	Count          int64  `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *OpportunityCount) Reset()                    { *m = OpportunityCount{} }
func (m *OpportunityCount) String() string            { return proto.CompactTextString(m) }
func (*OpportunityCount) ProtoMessage()               {}
func (*OpportunityCount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *OpportunityCount) GetAccountGroupId() string {
	if m != nil {
		return m.AccountGroupId
	}
	return ""
}

func (m *OpportunityCount) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GetOpportunityCountByAccountGroupsResponse struct {
	Results []*OpportunityCount `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
}

func (m *GetOpportunityCountByAccountGroupsResponse) Reset() {
	*m = GetOpportunityCountByAccountGroupsResponse{}
}
func (m *GetOpportunityCountByAccountGroupsResponse) String() string {
	return proto.CompactTextString(m)
}
func (*GetOpportunityCountByAccountGroupsResponse) ProtoMessage() {}
func (*GetOpportunityCountByAccountGroupsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{12}
}

func (m *GetOpportunityCountByAccountGroupsResponse) GetResults() []*OpportunityCount {
	if m != nil {
		return m.Results
	}
	return nil
}

type UpdateOpportunityResponse struct {
	Opportunity *Opportunity `protobuf:"bytes,1,opt,name=opportunity" json:"opportunity,omitempty"`
}

func (m *UpdateOpportunityResponse) Reset()                    { *m = UpdateOpportunityResponse{} }
func (m *UpdateOpportunityResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateOpportunityResponse) ProtoMessage()               {}
func (*UpdateOpportunityResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *UpdateOpportunityResponse) GetOpportunity() *Opportunity {
	if m != nil {
		return m.Opportunity
	}
	return nil
}

func init() {
	proto.RegisterType((*RevenueComponent)(nil), "salesopportunities.v1.RevenueComponent")
	proto.RegisterType((*Revenue)(nil), "salesopportunities.v1.Revenue")
	proto.RegisterType((*Opportunity)(nil), "salesopportunities.v1.Opportunity")
	proto.RegisterType((*CreateOpportunityRequest)(nil), "salesopportunities.v1.CreateOpportunityRequest")
	proto.RegisterType((*GetOpportunityRequest)(nil), "salesopportunities.v1.GetOpportunityRequest")
	proto.RegisterType((*ListOpportunitiesRequest)(nil), "salesopportunities.v1.ListOpportunitiesRequest")
	proto.RegisterType((*GetOpportunityCountByAccountGroupsRequest)(nil), "salesopportunities.v1.GetOpportunityCountByAccountGroupsRequest")
	proto.RegisterType((*UpdateOpportunityRequest)(nil), "salesopportunities.v1.UpdateOpportunityRequest")
	proto.RegisterType((*CreateOpportunityResponse)(nil), "salesopportunities.v1.CreateOpportunityResponse")
	proto.RegisterType((*GetOpportunityResponse)(nil), "salesopportunities.v1.GetOpportunityResponse")
	proto.RegisterType((*ListOpportunitiesResponse)(nil), "salesopportunities.v1.ListOpportunitiesResponse")
	proto.RegisterType((*OpportunityCount)(nil), "salesopportunities.v1.OpportunityCount")
	proto.RegisterType((*GetOpportunityCountByAccountGroupsResponse)(nil), "salesopportunities.v1.GetOpportunityCountByAccountGroupsResponse")
	proto.RegisterType((*UpdateOpportunityResponse)(nil), "salesopportunities.v1.UpdateOpportunityResponse")
	proto.RegisterEnum("salesopportunities.v1.RevenuePeriod", RevenuePeriod_name, RevenuePeriod_value)
	proto.RegisterEnum("salesopportunities.v1.Currency", Currency_name, Currency_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for SalesOpportunities service

type SalesOpportunitiesClient interface {
	CreateOpportunity(ctx context.Context, in *CreateOpportunityRequest, opts ...grpc.CallOption) (*CreateOpportunityResponse, error)
	GetOpportunity(ctx context.Context, in *GetOpportunityRequest, opts ...grpc.CallOption) (*GetOpportunityResponse, error)
	ListOpportunities(ctx context.Context, in *ListOpportunitiesRequest, opts ...grpc.CallOption) (*ListOpportunitiesResponse, error)
	GetOpportunityCountByAccountGroups(ctx context.Context, in *GetOpportunityCountByAccountGroupsRequest, opts ...grpc.CallOption) (*GetOpportunityCountByAccountGroupsResponse, error)
	UpdateOpportunity(ctx context.Context, in *UpdateOpportunityRequest, opts ...grpc.CallOption) (*UpdateOpportunityResponse, error)
}

type salesOpportunitiesClient struct {
	cc *grpc.ClientConn
}

func NewSalesOpportunitiesClient(cc *grpc.ClientConn) SalesOpportunitiesClient {
	return &salesOpportunitiesClient{cc}
}

func (c *salesOpportunitiesClient) CreateOpportunity(ctx context.Context, in *CreateOpportunityRequest, opts ...grpc.CallOption) (*CreateOpportunityResponse, error) {
	out := new(CreateOpportunityResponse)
	err := grpc.Invoke(ctx, "/salesopportunities.v1.SalesOpportunities/CreateOpportunity", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesOpportunitiesClient) GetOpportunity(ctx context.Context, in *GetOpportunityRequest, opts ...grpc.CallOption) (*GetOpportunityResponse, error) {
	out := new(GetOpportunityResponse)
	err := grpc.Invoke(ctx, "/salesopportunities.v1.SalesOpportunities/GetOpportunity", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesOpportunitiesClient) ListOpportunities(ctx context.Context, in *ListOpportunitiesRequest, opts ...grpc.CallOption) (*ListOpportunitiesResponse, error) {
	out := new(ListOpportunitiesResponse)
	err := grpc.Invoke(ctx, "/salesopportunities.v1.SalesOpportunities/ListOpportunities", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesOpportunitiesClient) GetOpportunityCountByAccountGroups(ctx context.Context, in *GetOpportunityCountByAccountGroupsRequest, opts ...grpc.CallOption) (*GetOpportunityCountByAccountGroupsResponse, error) {
	out := new(GetOpportunityCountByAccountGroupsResponse)
	err := grpc.Invoke(ctx, "/salesopportunities.v1.SalesOpportunities/GetOpportunityCountByAccountGroups", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesOpportunitiesClient) UpdateOpportunity(ctx context.Context, in *UpdateOpportunityRequest, opts ...grpc.CallOption) (*UpdateOpportunityResponse, error) {
	out := new(UpdateOpportunityResponse)
	err := grpc.Invoke(ctx, "/salesopportunities.v1.SalesOpportunities/UpdateOpportunity", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SalesOpportunities service

type SalesOpportunitiesServer interface {
	CreateOpportunity(context.Context, *CreateOpportunityRequest) (*CreateOpportunityResponse, error)
	GetOpportunity(context.Context, *GetOpportunityRequest) (*GetOpportunityResponse, error)
	ListOpportunities(context.Context, *ListOpportunitiesRequest) (*ListOpportunitiesResponse, error)
	GetOpportunityCountByAccountGroups(context.Context, *GetOpportunityCountByAccountGroupsRequest) (*GetOpportunityCountByAccountGroupsResponse, error)
	UpdateOpportunity(context.Context, *UpdateOpportunityRequest) (*UpdateOpportunityResponse, error)
}

func RegisterSalesOpportunitiesServer(s *grpc.Server, srv SalesOpportunitiesServer) {
	s.RegisterService(&_SalesOpportunities_serviceDesc, srv)
}

func _SalesOpportunities_CreateOpportunity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOpportunityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesOpportunitiesServer).CreateOpportunity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/salesopportunities.v1.SalesOpportunities/CreateOpportunity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesOpportunitiesServer).CreateOpportunity(ctx, req.(*CreateOpportunityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesOpportunities_GetOpportunity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOpportunityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesOpportunitiesServer).GetOpportunity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/salesopportunities.v1.SalesOpportunities/GetOpportunity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesOpportunitiesServer).GetOpportunity(ctx, req.(*GetOpportunityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesOpportunities_ListOpportunities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOpportunitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesOpportunitiesServer).ListOpportunities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/salesopportunities.v1.SalesOpportunities/ListOpportunities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesOpportunitiesServer).ListOpportunities(ctx, req.(*ListOpportunitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesOpportunities_GetOpportunityCountByAccountGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOpportunityCountByAccountGroupsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesOpportunitiesServer).GetOpportunityCountByAccountGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/salesopportunities.v1.SalesOpportunities/GetOpportunityCountByAccountGroups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesOpportunitiesServer).GetOpportunityCountByAccountGroups(ctx, req.(*GetOpportunityCountByAccountGroupsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesOpportunities_UpdateOpportunity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOpportunityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesOpportunitiesServer).UpdateOpportunity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/salesopportunities.v1.SalesOpportunities/UpdateOpportunity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesOpportunitiesServer).UpdateOpportunity(ctx, req.(*UpdateOpportunityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SalesOpportunities_serviceDesc = grpc.ServiceDesc{
	ServiceName: "salesopportunities.v1.SalesOpportunities",
	HandlerType: (*SalesOpportunitiesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateOpportunity",
			Handler:    _SalesOpportunities_CreateOpportunity_Handler,
		},
		{
			MethodName: "GetOpportunity",
			Handler:    _SalesOpportunities_GetOpportunity_Handler,
		},
		{
			MethodName: "ListOpportunities",
			Handler:    _SalesOpportunities_ListOpportunities_Handler,
		},
		{
			MethodName: "GetOpportunityCountByAccountGroups",
			Handler:    _SalesOpportunities_GetOpportunityCountByAccountGroups_Handler,
		},
		{
			MethodName: "UpdateOpportunity",
			Handler:    _SalesOpportunities_UpdateOpportunity_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "opportunity.proto",
}

func init() { proto.RegisterFile("opportunity.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 990 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xdc, 0x56, 0x4d, 0x73, 0xdb, 0x44,
	0x18, 0xb6, 0x2c, 0x7f, 0xbe, 0x6e, 0x5c, 0x79, 0x69, 0x8b, 0x62, 0x66, 0x88, 0x47, 0x03, 0xd4,
	0x64, 0xc0, 0x01, 0xc3, 0x81, 0x99, 0xf6, 0x50, 0xc7, 0x36, 0xc1, 0xe0, 0x7c, 0x8c, 0x92, 0xb4,
	0xe3, 0x1e, 0xd0, 0x28, 0xd2, 0x26, 0x11, 0xd8, 0x5a, 0xb1, 0x2b, 0x65, 0xe2, 0xfe, 0x00, 0xfe,
	0x01, 0x57, 0x66, 0x38, 0xf3, 0x87, 0xb8, 0xf1, 0x57, 0x98, 0x5d, 0xc9, 0xae, 0xec, 0x58, 0xb6,
	0x3b, 0xf1, 0x70, 0xe8, 0x6d, 0xf7, 0xd5, 0xfb, 0xbc, 0x5f, 0xfb, 0x3c, 0xda, 0x85, 0x0a, 0xf1,
	0x3c, 0x42, 0xfd, 0xc0, 0x75, 0xfc, 0x71, 0xc3, 0xa3, 0xc4, 0x27, 0xe8, 0x31, 0x33, 0x87, 0x98,
	0xbd, 0xb5, 0x3b, 0x98, 0x35, 0x6e, 0xbe, 0xae, 0xee, 0x5c, 0x11, 0x72, 0x35, 0xc4, 0x7b, 0xc2,
	0xe9, 0x22, 0xb8, 0xdc, 0xf3, 0x9d, 0x11, 0x66, 0xbe, 0x39, 0xf2, 0x42, 0x9c, 0x76, 0x09, 0x8a,
	0x8e, 0x6f, 0xb0, 0x1b, 0xe0, 0x36, 0x19, 0x79, 0xc4, 0xc5, 0xae, 0x8f, 0x1e, 0x41, 0xf6, 0xc6,
	0x1c, 0x06, 0x58, 0x95, 0x6a, 0x52, 0x5d, 0xd2, 0xc3, 0x0d, 0x7a, 0x0e, 0x39, 0x0f, 0x53, 0x87,
	0xd8, 0x6a, 0xba, 0x26, 0xd5, 0xcb, 0xcd, 0x4f, 0x1a, 0x0b, 0x53, 0x36, 0xa2, 0x70, 0x27, 0xc2,
	0x57, 0x8f, 0x30, 0xda, 0x9f, 0x12, 0xe4, 0xa3, 0x2f, 0xe8, 0x19, 0x14, 0xac, 0x80, 0x52, 0xec,
	0x5a, 0x63, 0x91, 0xa2, 0xdc, 0xdc, 0x49, 0x88, 0xd5, 0x8e, 0xdc, 0xf4, 0x29, 0x00, 0xbd, 0x04,
	0x44, 0xc3, 0x38, 0x86, 0x35, 0xa9, 0x98, 0xa9, 0xe9, 0x9a, 0x5c, 0x2f, 0x35, 0x9f, 0x2e, 0x2f,
	0x69, 0xda, 0xa1, 0x5e, 0xa1, 0x73, 0x16, 0xa6, 0xfd, 0x93, 0x81, 0xd2, 0xf1, 0xdb, 0xb1, 0xa2,
	0x4f, 0xa1, 0x1c, 0x9b, 0xb2, 0xe1, 0xd8, 0xa2, 0xd4, 0xa2, 0xbe, 0x15, 0xb3, 0xf6, 0x6c, 0x54,
	0x07, 0xc5, 0xb4, 0x2c, 0x12, 0xb8, 0xbe, 0x71, 0x45, 0x49, 0xe0, 0x71, 0xc7, 0xb4, 0x70, 0x2c,
	0x47, 0xf6, 0x03, 0x6e, 0xee, 0xd9, 0xe8, 0x33, 0x78, 0x28, 0xaa, 0x33, 0x3c, 0x4c, 0x19, 0x71,
	0xb9, 0xa3, 0x1c, 0x46, 0x14, 0xe6, 0x13, 0x61, 0xed, 0xd9, 0x08, 0x41, 0xc6, 0x35, 0x47, 0x58,
	0xcd, 0x88, 0x8f, 0x62, 0x8d, 0xbe, 0x83, 0x7c, 0x54, 0xb1, 0x9a, 0xab, 0x49, 0xf5, 0x52, 0xf3,
	0xe3, 0xe5, 0x9d, 0xea, 0x13, 0x77, 0xb4, 0x03, 0x25, 0xcf, 0xb4, 0x7e, 0x35, 0xaf, 0xb0, 0xe1,
	0xd8, 0x4c, 0xcd, 0xd7, 0xe4, 0x7a, 0x51, 0x87, 0xc8, 0xd4, 0xb3, 0x19, 0xfa, 0x11, 0x3e, 0xc0,
	0xb7, 0x1e, 0xb6, 0x7c, 0x6c, 0x1b, 0xd6, 0x90, 0x30, 0x6c, 0xd8, 0xa6, 0x8f, 0xd5, 0x82, 0x48,
	0x53, 0x6d, 0x84, 0xfc, 0x69, 0x4c, 0xf8, 0xd3, 0x38, 0x9b, 0xf0, 0x47, 0xaf, 0x4c, 0x60, 0x6d,
	0x8e, 0xea, 0x98, 0x3e, 0x46, 0x35, 0x28, 0x79, 0x94, 0x5c, 0x98, 0x17, 0xce, 0xd0, 0xf1, 0xc7,
	0x6a, 0x51, 0xd0, 0x27, 0x6e, 0xe2, 0xd4, 0x72, 0x89, 0x8f, 0x99, 0x0a, 0xa2, 0xbb, 0x70, 0x83,
	0xbe, 0x85, 0xbc, 0x8d, 0x87, 0xd8, 0xc7, 0xb6, 0x5a, 0x5a, 0x99, 0x77, 0xe2, 0xca, 0x51, 0x16,
	0xc5, 0x26, 0x47, 0x3d, 0x58, 0x8d, 0x8a, 0x5c, 0x39, 0x2a, 0xf0, 0x6c, 0x81, 0xda, 0x5a, 0x8d,
	0x8a, 0x5c, 0xd1, 0x33, 0xa8, 0x7a, 0x94, 0xfc, 0x12, 0x8e, 0xe9, 0xd2, 0xa1, 0xcc, 0x37, 0xc6,
	0xd8, 0xa4, 0x46, 0xa8, 0x93, 0xb2, 0x68, 0xf4, 0xc3, 0xa9, 0xc7, 0xf7, 0xdc, 0x61, 0x80, 0x4d,
	0xfa, 0x92, 0x7f, 0xd6, 0xfe, 0x4d, 0x83, 0xda, 0x16, 0xe9, 0x63, 0x04, 0xd3, 0xf1, 0x6f, 0x01,
	0x66, 0xfe, 0x42, 0x02, 0x49, 0xeb, 0x12, 0x28, 0xbd, 0x8c, 0x40, 0xf2, 0x62, 0x02, 0x65, 0xef,
	0x45, 0xa0, 0xdc, 0xba, 0x04, 0xca, 0x6f, 0x80, 0x40, 0x85, 0x25, 0x04, 0x2a, 0xc6, 0x08, 0xa4,
	0x5d, 0xc3, 0xe3, 0x03, 0xec, 0x2f, 0x98, 0xee, 0xa6, 0x55, 0xac, 0x8d, 0x41, 0xed, 0x3b, 0x2c,
	0x96, 0xca, 0xc1, 0xec, 0xdd, 0x8f, 0xf2, 0x09, 0xe4, 0xac, 0x80, 0x32, 0x42, 0xa3, 0x2c, 0xd1,
	0x0e, 0x7d, 0x04, 0x45, 0x8f, 0x4f, 0x9a, 0x39, 0x6f, 0xc2, 0xf3, 0x93, 0xf5, 0x02, 0x37, 0x9c,
	0x3a, 0x6f, 0xb0, 0xf6, 0x0a, 0x3e, 0x9f, 0x6d, 0xb2, 0xcd, 0x43, 0xee, 0x8f, 0x5b, 0xb1, 0xd8,
	0xd3, 0x5a, 0x76, 0xa1, 0x32, 0x5f, 0x0b, 0x53, 0x25, 0x71, 0x78, 0x0f, 0x67, 0x8b, 0x61, 0xda,
	0xef, 0x32, 0xa8, 0xe7, 0x82, 0xe8, 0xff, 0xc3, 0x04, 0x37, 0xf5, 0x1f, 0x7c, 0x1f, 0x69, 0x6c,
	0xc2, 0xf6, 0x82, 0xff, 0x04, 0xf3, 0x88, 0xcb, 0x30, 0xea, 0x40, 0x29, 0x36, 0x72, 0x71, 0x0a,
	0xa5, 0xa6, 0x96, 0xd0, 0x7f, 0x3c, 0x40, 0x1c, 0xa6, 0xfd, 0x0c, 0x4f, 0xe6, 0x95, 0xb2, 0xd1,
	0xf8, 0x7f, 0x48, 0xb0, 0xbd, 0x40, 0x20, 0x51, 0x8e, 0xe7, 0xfc, 0xfc, 0x58, 0x30, 0xf4, 0x43,
	0x2e, 0xae, 0x17, 0x7f, 0x02, 0xe1, 0x67, 0xe8, 0xe2, 0x5b, 0xdf, 0x98, 0x91, 0x0e, 0x70, 0x53,
	0x3b, 0x94, 0xcf, 0x36, 0x14, 0xae, 0x4d, 0x66, 0x8c, 0x08, 0x0d, 0xd5, 0x53, 0xd0, 0xf3, 0xd7,
	0x26, 0x3b, 0x24, 0x14, 0x6b, 0x3a, 0x28, 0xf3, 0xca, 0x79, 0x07, 0xbd, 0x3e, 0x82, 0xac, 0xd8,
	0x8b, 0x9c, 0xb2, 0x1e, 0x6e, 0x34, 0x02, 0xbb, 0xeb, 0x08, 0x32, 0xea, 0xbd, 0x35, 0xdf, 0xfb,
	0xd3, 0xd5, 0xbd, 0x8b, 0x80, 0xd3, 0x01, 0x70, 0x7e, 0x2c, 0xd0, 0xe9, 0x26, 0xcf, 0x6f, 0xf7,
	0x35, 0x6c, 0xcd, 0x3c, 0xe0, 0x50, 0x09, 0xf2, 0xc7, 0x47, 0xdd, 0xb3, 0xde, 0x61, 0x57, 0x49,
	0xa1, 0x22, 0x64, 0x3b, 0xad, 0x5e, 0x7f, 0xa0, 0x48, 0x08, 0x20, 0xf7, 0xaa, 0xdb, 0xfd, 0xa9,
	0x3f, 0x50, 0xd2, 0xe8, 0x01, 0x14, 0xf6, 0x7b, 0xd1, 0x4e, 0xe6, 0x88, 0xc3, 0xe3, 0xa3, 0xb3,
	0x1f, 0xfa, 0x03, 0x25, 0xc3, 0xdd, 0x06, 0xdd, 0x96, 0xde, 0x1f, 0x28, 0xd9, 0xdd, 0x17, 0x50,
	0x98, 0x3c, 0xe8, 0x50, 0x1e, 0xe4, 0xf3, 0xd3, 0x8e, 0x92, 0xe2, 0x8b, 0x76, 0xe7, 0x48, 0x91,
	0xf8, 0xa2, 0x7b, 0xae, 0x2b, 0x69, 0xbe, 0x68, 0x9d, 0x77, 0x14, 0x99, 0x2f, 0x0e, 0xf6, 0x4f,
	0x94, 0x0c, 0x5f, 0x1c, 0xbd, 0xee, 0x28, 0xd9, 0xe6, 0x5f, 0x59, 0x40, 0xa7, 0xbc, 0xa1, 0x19,
	0x7a, 0xa1, 0x5b, 0xa8, 0xdc, 0xd1, 0x0d, 0xda, 0x4b, 0x7a, 0x53, 0x26, 0xdc, 0xc4, 0xd5, 0xaf,
	0xd6, 0x07, 0x84, 0x23, 0xd7, 0x52, 0x88, 0x40, 0x79, 0x96, 0x02, 0xe8, 0x8b, 0x84, 0x28, 0x0b,
	0xef, 0xa7, 0xea, 0x97, 0x6b, 0x7a, 0x4f, 0x13, 0xde, 0x42, 0xe5, 0x8e, 0xbc, 0x12, 0x5b, 0x4d,
	0xba, 0xa9, 0x12, 0x5b, 0x4d, 0x54, 0xae, 0x96, 0x42, 0x7f, 0x4b, 0xa0, 0xad, 0xa6, 0x3b, 0x7a,
	0xb1, 0x56, 0x47, 0x4b, 0xae, 0xae, 0x6a, 0xeb, 0x1e, 0x11, 0xe2, 0x73, 0xba, 0x23, 0x95, 0xc4,
	0x39, 0x25, 0x5d, 0x7e, 0x89, 0x73, 0x4a, 0x54, 0xa1, 0x96, 0xba, 0xc8, 0x89, 0x3b, 0xe2, 0x9b,
	0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0xe4, 0xae, 0x75, 0xbd, 0xa5, 0x0d, 0x00, 0x00,
}
